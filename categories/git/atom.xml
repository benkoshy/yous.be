<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Yous]]></title>
  <link href="http://yous.be/categories/git/atom.xml" rel="self"/>
  <link href="http://yous.be/"/>
  <updated>2014-09-15T21:50:38+09:00</updated>
  <id>http://yous.be/</id>
  <author>
    <name><![CDATA[Yous]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Write a Git Commit Message]]></title>
    <link href="http://yous.be/2014/09/03/how-to-write-a-git-commit-message/"/>
    <updated>2014-09-03T22:12:47+09:00</updated>
    <id>http://yous.be/2014/09/03/how-to-write-a-git-commit-message</id>
    <content type="html"><![CDATA[<p><a href="http://xkcd.com/1296/"><img src="http://imgs.xkcd.com/comics/git_commit.png" alt="Git Commit" /></a></p>

<blockquote><h2>The seven rules of a great git commit message</h2>

<blockquote><p>Keep in mind: <a href="http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html">This</a> <a href="http://www.git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project#Commit-Guidelines">has</a> <a href="https://github.com/torvalds/subsurface/blob/master/README#L82-109">all</a> <a href="http://who-t.blogspot.co.at/2009/12/on-commit-messages.html">been</a> <a href="https://github.com/erlang/otp/wiki/writing-good-commit-messages">said</a> <a href="https://github.com/spring-projects/spring-framework/blob/30bce7/CONTRIBUTING.md#format-commit-messages">before</a>.</p></blockquote>

<ol>
<li><a href="http://chris.beams.io/posts/git-commit/#separate">Separate subject from body with a blank line</a></li>
<li><a href="http://chris.beams.io/posts/git-commit/#limit-50">Limit the subject line to 50 characters</a></li>
<li><a href="http://chris.beams.io/posts/git-commit/#capitalize">Capitalize the subject line</a></li>
<li><a href="http://chris.beams.io/posts/git-commit/#end">Do not end the subject line with a period</a></li>
<li><a href="http://chris.beams.io/posts/git-commit/#imperative">Use the imperative mood in the subject line</a></li>
<li><a href="http://chris.beams.io/posts/git-commit/#wrap-72">Wrap the body at 72 characters</a></li>
<li><a href="http://chris.beams.io/posts/git-commit/#why-not-how">Use the body to explain <em>what</em> and <em>why</em> vs. <em>how</em></a></li>
</ol>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trailing whitespace is evil. Don't commit evil into your repo.]]></title>
    <link href="http://yous.be/2014/03/31/trailing-whitespace-is-evil-dont-commit-evil-into-your-repo/"/>
    <updated>2014-03-31T20:57:09+09:00</updated>
    <id>http://yous.be/2014/03/31/trailing-whitespace-is-evil-dont-commit-evil-into-your-repo</id>
    <content type="html"><![CDATA[<p><a href="http://codeimpossible.com/about.html">Jared Barboza</a>가 쓴 <a href="http://codeimpossible.com/2012/04/02/Trailing-whitespace-is-evil-Don-t-commit-evil-into-your-repo-/">줄 끝 공백에 관한 글</a>이다.</p>

<blockquote><p><strong>난 최근에 다양한 사람/언어/편집기와 함께 많은 프로젝트를 진행해 왔다. 우리들 대부분은 Git 초보자였고, 각 프로젝트는 줄 끝 공백에 관한 문제가 있었다.</strong></p></blockquote>

<p>경력 있는 개발자로만 이루어진 팀이라고 해도 이런 문제는 발생하기 마련이다.</p>

<blockquote><p>줄 끝 공백은 당신의 저장소에서 상당히 많은 문제를 일으킬 수 있다. 실제로 바뀐 것은 공백일 뿐인데도 그 줄에 변경 사항이 있다는 잘못된 diff를 만든다.</p>

<p>이는 개발 과정에서 나중에 실제 파일의 변경 사항이 무엇이었는지 찾기 불가능하게 만든다. 대부분의 오픈 소스 프로젝트 대표들은 이를 알고 있고, 그들 대부분은 줄 끝 공백을 없애지 않은 풀 리퀘스트를 거절할 것이다.</p></blockquote>

<p>이후 글에서는 Visual Studio와 Sublime Text 2에서 줄 끝 공백을 제거하는 방법과 git hook을 통해 커밋에 줄 끝 공백이 포함되지 않도록 하는 방법을 소개하고 있다.</p>

<p>나는 Android Studio에서는 파일 저장 시 모든 줄 끝 공백을 지우고, Vim에서는 줄 끝 공백에 하이라이트를 입혀 쓰고 있다.</p>

<figure class='code'><figcaption><span>.vimrc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="nb">highlight</span> ExtraWhitespace ctermbg<span class="p">=</span><span class="k">red</span> guibg<span class="p">=</span><span class="k">red</span>
</span><span class='line'>autocmd <span class="nb">BufWinEnter</span> * <span class="k">match</span> ExtraWhitespace <span class="sr">/\s\+$/</span>
</span><span class='line'>autocmd <span class="nb">InsertEnter</span> * <span class="k">match</span> ExtraWhitespace <span class="sr">//</span>
</span><span class='line'>autocmd <span class="nb">InsertLeave</span> * <span class="k">match</span> ExtraWhitespace <span class="sr">/\s\+$/</span>
</span><span class='line'><span class="k">if</span> <span class="k">version</span> <span class="p">&gt;=</span> <span class="m">702</span>
</span><span class='line'>  autocmd <span class="nb">BufWinLeave</span> * <span class="k">call</span> clearmatches<span class="p">()</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Global Git Ignore]]></title>
    <link href="http://yous.be/2014/03/25/global-git-ignore/"/>
    <updated>2014-03-25T20:49:32+09:00</updated>
    <id>http://yous.be/2014/03/25/global-git-ignore</id>
    <content type="html"><![CDATA[<p><a href="http://usevim.com">usevim</a>의 <a href="http://twitter.com/#!/alex_young">Alex Young</a>이 쓴 <a href="http://usevim.com/2013/10/04/gitglobal-ignore/">global gitignore에 관한 글</a>이다.</p>

<blockquote><p>나는 몇 년간 <code>.gitignore</code>에 <code>*.sw?</code>을 넣어 왔는데, Vim을 쓰지 않는 사람들은 특정 편집기를 위한 <code>.gitignore</code> 항목을 보고 싶지 않아 할 수도 있다는 걸 깨달았다. 편집기들은 임시 파일과 복구 파일을 각자 다른 방식으로 관리하기 때문에 이 설정을 모두에게 강요하는 것은 과해 보인다.</p>

<p>이것보단 global 옵션을 사용하는 것이 낫다. <code>git config --global core.excludesfile ~/.gitignore</code>를 실행해라. 그러면 거기에 <code>*.sw?</code>을, 어쩌면 <code>*~</code>도 넣을 수 있다. 난 <code>.DS_Store</code>를 추가할 텐데, Windows 개발자들은 여기 신경 쓸 필요가 없기 때문이다. 그리고 그들은 아마 <code>Thumbs.db</code>를 추가해야 할 것이다.</p></blockquote>
]]></content>
  </entry>
  
</feed>
